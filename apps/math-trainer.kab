# Math trainer
#
ind = -1
q$ = ""
subr init_vars
   resok = 0
   res = 0
   t = systime
   state = 1
   op = ind
   if op <= 2
      todo = 10
   elif op <= 4
      todo = 5
   elif op <= 6
      todo = 3
   else
      todo = 1
   .
.
proc disp col s$ . .
   color col
   move 3 76
   rect 94 21
   color 888
   if op = 6
      s$[] = strsplit s$ "\n"
      textsize 8
      move 6 89
      text s$[1]
      move 6 80
      text s$[2]
   elif op <= 5
      textsize 12
      move 6 82
      text s$
   else
      textsize 11
      move 6 83
      text s$
   .
.
proc show_quest . .
   if res = resok
      if op = 1
         a = randint 8 + 1
         b = randint 8 + 1
         q$ = a & " Â· " & b & " = "
         resok = a * b
      elif op = 2
         b = randint 8 + 1
         resok = randint 8 + 1
         a = b * resok
         q$ = a & " Ã· " & b & " = "
      elif op = 3
         a = randint 77 + 10
         b = randint (89 - a) + 10
         q$ = a & " + " & b & " = "
         resok = a + b
      elif op = 4
         a = randint 70 + 29
         b = randint (a - 11) + 10
         q$ = a & " - " & b & " = "
         resok = a - b
      elif op = 5
         a = randint 89 + 10
         b = randint 8 + 1
         q$ = a & " Â· " & b & " = "
         resok = a * b
      elif op = 6
         b = randint 8 + 2
         resok = randint 8 + 2
         a = b * resok
         c = randint 10 + 3
         d = a - c
         sn$ = " - "
         if randint 2 = 1
            sn$ = " + "
            d = a + c
         .
         q$ = b & " Â· x" & sn$ & c & " = " & d & "\nx = "
      elif op = 7
         a = randint 21 + 10
         b = randint 21 + 10
         q$ = a & " Â· " & b & " = "
         resok = a * b
      elif op = 8
         b = randint 21 + 10
         resok = randint 21 + 10
         a = b * resok
         q$ = a & " Ã· " & b & " = "
      .
   .
   disp 030 q$ & "_"
   res = 0
.
proc draw_key col ind . .
   s$ = strchar (ind + 48)
   h = ind
   if h < 10 and h > 0
      h -= 1
      x = h mod 3 * 24 + 3
      y = 2 - h div 3
   else
      x = 3 * 24 + 3
      if h = 0
         y = 1
      elif h = 10
         y = 2
         s$ = "âŒ«"
      else
         y = 0
         s$ = "âœ“"
      .
   .
   y = y * 24 + 3
   color col
   move x y
   rect 22 22
   move x + 5 y + 4.5
   color 888
   textsize 16
   text s$
.
background 010
proc start . .
   init_vars
   clear
   for ind = 0 to 11
      draw_key 020 ind
   .
   show_quest
.
menu$[] = [ "7 Â· 8 = _\nğŸ¤”" "56 Ã· 8 = _\nğŸ¤”" "34 + 23 = _\nğŸ¤”ğŸ¤”" "67 - 21 = _\nğŸ¤”ğŸ¤”" "13 Â· 7 = _\nğŸ¤”ğŸ¤”" "3 Â· x - 4 = 8\nğŸ¤”ğŸ¤”" "13 Â· 27 = _\nğŸ¤”ğŸ¤”ğŸ¤”" "837 Ã· 31 = _\nğŸ¤”ğŸ¤”ğŸ¤”" ]
#
proc draw_menu_key col i . .
   c = (i - 1) mod 2
   r = (i - 1) div 2
   y = (3 - r) * 24 + 3
   x = c * 48 + 3
   #
   move x y
   color col
   rect 45 22
   color 888
   textsize 5
   s$ = menu$[i]
   s$[] = strsplit s$ "\n"
   move x + 2 y + 13
   text s$[1]
   textsize 4
   move x + 2 y + 6
   text s$[2]
.
proc draw_menu . .
   clear
   for i = 1 to len menu$[]
      draw_menu_key 020 i
   .
   state = 0
.
proc handle_key2 . .
   if ind = 11
      state = 2
      if res = resok
         col = 050
         todo -= 1
         timer 0.5
      else
         col = 500
         timer 2
      .
      disp col q$ & res
   else
      if ind = 10
         res = res div 10
         h$ = res
         if res = 0
            h$ = "_"
         .
      else
         if res >= 100
            res = 0
         .
         res = res * 10 + ind
         h$ = res
      .
      disp 030 q$ & h$
   .
.
proc handle_key . .
   c = mouse_x div 25
   r = 2 - mouse_y div 25
   if c < 3
      ind = r * 3 + c + 1
   else
      if r = 1
         ind = 0
      elif r = 0
         ind = 10
      else
         ind = 11
      .
   .
   draw_key 040 ind
   handle_key2
.
on key_down
   ind = strcode keybkey - 48
   if state = 1
      if ind >= 0 and ind <= 9
         #
      elif ind = 21
         ind = 11
      elif ind = 18 or ind = 20
         ind = 10
      else
         ind = -1
      .
      if ind >= 0
         handle_key2
      .
   elif state = 0
      if ind >= 1 and ind <= 4
         ind -= 1
         start
      .
   elif state = 4
      draw_menu
   .
.
on mouse_down
   if state = 0
      r = 2 - (mouse_y - 20) div 25
      c = mouse_x div 50
      ind = r * 2 + c + 1
      if ind <= 8
         draw_menu_key 030 ind
      else
         ind = -1
      .
   elif state = 1
      if mouse_y < 75
         handle_key
      elif res = 0
         ind = -1
         draw_menu
      .
   elif state = 4
      draw_menu
   .
.
on mouse_up
   if ind >= 0
      if state = 0
         start
      elif state = 1 or state = 2
         draw_key 020 ind
      .
      ind = -1
   .
.
proc smiley t . .
   if t <= 60
      move 65 30
      color 983
      circle 19
      color 000
      move 58 37
      circle 2
      move 72 37
      circle 2
      linewidth 2
      if t <= 30
         curve [ 56 27 65 14 74 27 ]
      else
         curve [ 58 23 65 17 72 23 ]
      .
   .
.
proc show_result . .
   state = 3
   timer 2
   t = floor (systime - t)
   move 3 3
   color 030
   rect 94 94
   color 888
   move 10 84
   textsize 10
   text "Well done!"
   move 10 70
   text "Time: " & t
   move 10 56
   textsize 4
   text q$ & resok
   smiley t
.
on timer
   if state = 3
      state = 4
   elif state = 2 and todo = 0
      show_result
   elif state = 2
      show_quest
      state = 1
   .
.
draw_menu