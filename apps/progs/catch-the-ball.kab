# Catch the ball
#
subr new_ball
   x_pos = 50
   y_pos = 50
   x_speed = 0.4 + 0.2 * points + (randomf - 0.5)
   y_speed = 0.4 + 0.2 * points + (randomf - 0.5)
   col = 0
   for i = 1 to 3
      col = col * 10 + random 7 + 2
   .
.
subr start
   rad = 16
   mouse_cursor 1
   points = 0
   lives = 3
   gtextsize 6
   new_ball
.
gbackground 000
subr backgr
   gclear
   gcolor 222
   gline 0 0 100 0
   gline 100 0 100 100
   gline 100 100 0 100
   gline 0 100 0 0
   gcolor 995
   gtext 4 94 "Points: " & points
   gtext 4 86 "Lives: " & lives
.
on animate
   if lives > 0
      backgr
      gcolor col
      gcircle x_pos y_pos rad
      x_pos += x_speed
      y_pos += y_speed
      if x_pos < rad or x_pos > 100 - rad
         x_speed = -x_speed
      .
      if y_pos < rad or y_pos > 100 - rad
         y_speed = -y_speed
      .
   .
.
subr catch
   dx = abs (mouse_x - x_pos)
   dy = abs (mouse_y - y_pos)
   if dx * dx + dy * dy < rad * rad
      # sound [ 440 0.1 494 0.1 523 0.2 ]
      points += 1
      if points mod 3 = 0 : lives += 1
      new_ball
   else
      lives -= 1
      # sound [ 262 0.2 ]
      if lives = 0
         backgr
         gtextsize 10
         gtext 20 55 "Game over"
         mouse_cursor 0
      .
   .
.
on timer
   locked = 0
.
on mouse_down
   if locked = 0
      locked = 1
      timer 1
      if lives = 0
         start
      else
         catch
      .
   .
.
start

