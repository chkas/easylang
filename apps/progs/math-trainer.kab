# Math trainer
#
ind = -1
q$ = ""
subr init_vars
   resok = 0
   res = 0
   t = systime
   state = 1
   op = ind
   if op <= 2
      todo = 10
   elif op <= 4
      todo = 5
   elif op <= 6
      todo = 3
   else
      todo = 1
   .
.
proc disp col s$ .
   gcolor col
   grect 3 76 94 21
   gcolor 888
   if op = 6
      s$[] = strsplit s$ "
"
      gtextsize 8
      gtext 6 89 s$[1]
      gtext 6 80 s$[2]
   elif op <= 5
      gtextsize 12
      gtext 6 82 s$
   else
      gtextsize 11
      gtext 6 83 s$
   .
.
proc show_quest .
   if res = resok
      if op = 1
         a = random 8 + 1
         b = random 8 + 1
         q$ = a & " Â· " & b & " = "
         resok = a * b
      elif op = 2
         b = random 8 + 1
         resok = random 8 + 1
         a = b * resok
         q$ = a & " Ã· " & b & " = "
      elif op = 3
         a = random 77 + 10
         b = random (89 - a) + 10
         q$ = a & " + " & b & " = "
         resok = a + b
      elif op = 4
         a = random 70 + 29
         b = random (a - 11) + 10
         q$ = a & " - " & b & " = "
         resok = a - b
      elif op = 5
         a = random 89 + 10
         b = random 8 + 1
         q$ = a & " Â· " & b & " = "
         resok = a * b
      elif op = 6
         b = random 8 + 2
         resok = random 8 + 2
         a = b * resok
         c = random 10 + 3
         d = a - c
         sn$ = " - "
         if random 2 = 1
            sn$ = " + "
            d = a + c
         .
         q$ = b & " Â· x" & sn$ & c & " = " & d & "
x = "
      elif op = 7
         a = random 21 + 10
         b = random 21 + 10
         q$ = a & " Â· " & b & " = "
         resok = a * b
      elif op = 8
         b = random 21 + 10
         resok = random 21 + 10
         a = b * resok
         q$ = a & " Ã· " & b & " = "
      .
   .
   disp 030 q$ & "_"
   res = 0
.
proc draw_key col ind .
   s$ = strchar (ind + 48)
   h = ind
   if h < 10 and h > 0
      h -= 1
      x = h mod 3 * 24 + 3
      y = 2 - h div 3
   else
      x = 3 * 24 + 3
      if h = 0
         y = 1
      elif h = 10
         y = 2
         s$ = "âŒ«"
      else
         y = 0
         s$ = "âœ“"
      .
   .
   y = y * 24 + 3
   gcolor col
   grect x y 22 22
   gcolor 888
   gtextsize 16
   gtext x + 5 y + 4.5 s$
.
background 010
proc start .
   init_vars
   gclear
   for ind = 0 to 11 : draw_key 020 ind
   show_quest
.
menu$[] = [ "7 Â· 8 = _
ğŸ¤”" "56 Ã· 8 = _
ğŸ¤”" "34 + 23 = _
ğŸ¤”ğŸ¤”" "67 - 21 = _
ğŸ¤”ğŸ¤”" "13 Â· 7 = _
ğŸ¤”ğŸ¤”" "3 Â· x - 4 = 8
ğŸ¤”ğŸ¤”" "13 Â· 27 = _
ğŸ¤”ğŸ¤”ğŸ¤”" "837 Ã· 31 = _
ğŸ¤”ğŸ¤”ğŸ¤”" ]
#
proc draw_menu_key col i .
   c = (i - 1) mod 2
   r = (i - 1) div 2
   y = (3 - r) * 24 + 3
   x = c * 48 + 3
   #
   gcolor col
   grect x y 45 22
   gcolor 888
   gtextsize 5
   s$ = menu$[i]
   s$[] = strsplit s$ "
"
   gtext x + 2 y + 13 s$[1]
   gtextsize 4
   gtext x + 2 y + 6 s$[2]
.
proc draw_menu .
   gclear
   for i = 1 to len menu$[] : draw_menu_key 020 i
   state = 0
.
proc handle_key2 .
   if ind = 11
      state = 2
      if res = resok
         col = 050
         todo -= 1
         timer 0.5
      else
         col = 500
         timer 2
      .
      disp col q$ & res
   else
      if ind = 10
         res = res div 10
         h$ = res
         if res = 0 : h$ = "_"
      else
         if res >= 100 : res = 0
         res = res * 10 + ind
         h$ = res
      .
      disp 030 q$ & h$
   .
.
proc handle_key .
   c = mouse_x div 25
   r = 2 - mouse_y div 25
   if c < 3
      ind = r * 3 + c + 1
   else
      if r = 1
         ind = 0
      elif r = 0
         ind = 10
      else
         ind = 11
      .
   .
   draw_key 040 ind
   handle_key2
.
on key_down
   ind = strcode keybkey - 48
   if state = 1
      if ind >= 0 and ind <= 9
         #
      elif ind = 21
         ind = 11
      elif ind = 18 or ind = 20
         ind = 10
      else
         ind = -1
      .
      if ind >= 0
         handle_key2
      .
   elif state = 0
      if ind >= 1 and ind <= 4
         ind -= 1
         start
      .
   elif state = 4
      draw_menu
   .
.
on mouse_down
   if state = 0
      r = 2 - (mouse_y - 20) div 25
      c = mouse_x div 50
      ind = r * 2 + c + 1
      if ind <= 8
         draw_menu_key 030 ind
      else
         ind = -1
      .
   elif state = 1
      if mouse_y < 75
         handle_key
      elif res = 0
         ind = -1
         draw_menu
      .
   elif state = 4
      draw_menu
   .
.
on mouse_up
   if ind >= 0
      if state = 0
         start
      elif state = 1 or state = 2
         draw_key 020 ind
      .
      ind = -1
   .
.
proc smiley t .
   if t <= 60
      gcolor 983
      gcircle 65 35 19
      gcolor 000
      gcircle 58 42 2
      gcircle 72 42 2
      glinewidth 2
      if t <= 30
         gcurve [ 56 32 65 19 74 32 ]
      else
         gcurve [ 58 28 65 22 72 28 ]
      .
   .
.
proc show_result .
   state = 3
   timer 2
   t = floor (systime - t)
   gcolor 030
   grect 3 3 94 94
   gcolor 888
   gtextsize 10
   gtext 10 84 "Well done!"
   gtext 10 70 "Time: " & t
   gtextsize 4
   gtext 10 56 q$ & resok
   smiley t
.
on timer
   if state = 3
      state = 4
   elif state = 2 and todo = 0
      show_result
   elif state = 2
      show_quest
      state = 1
   .
.
draw_menu
