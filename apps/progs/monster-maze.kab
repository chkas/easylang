# Monster maze
#
sysconf topleft
size = 12
n_monster = 6
monster_delay = 8
#
sz = 2 * size + 1
c = (100 - 24 / size) / size
c2 = c / 2
c5 = c / 5
c8 = c / 8
c16 = c / 16
c10 = c / 10
c20 = c / 20
csc2 = c2 - c10 - c / 128
#
len f[] sz * sz
subr go_home
   me_col = 0
   me_col_s = 0
   me_row = 0
   me_row_s = 0
   me_x = c2 + c10
   me_y = c2 + c10
   m_x = 0
   m_y = 0
.
subr initvars
   dme_x = 0
   dme_y = 0
   len m_col[] n_monster
   len m_row[] n_monster
   len m_dirx[] n_monster
   len m_diry[] n_monster
   time_start = systime
   stat = 0
   n_mo = n_monster
   h = size div 5
   for i to n_mo
      m_col[i] = random (size - h) + h - 1
      m_row[i] = random (size - h) + h - 1
      m_dirx[i] = 0
      m_diry[i] = 0
   .
   step = 0
   frame = 0
   go_home
.
proc show_maze .
   glinewidth c5
   gcolor 000
   grect 0 0 100 100
   gcolor 040
   for r range0 sz : for co range0 sz
      if f[r * sz + co + 1] = 1
         if r mod 2 = 0
            if co mod 2 = 1
               x = c10 + (co - 1) * c2
               y = c10 + r * c2
               gline x y x + c y
            .
         else
            x = c10 + co * c2
            y = c10 + (r - 1) * c2
            gline x y x y + c
         .
      .
   .
.
proc make_maze .
   for i to len f[] : f[i] = 1
   f[sz * sz - 1] = 0
   visited = 1
   hsz = sz div 2
   x = 2 * random hsz - 1
   y = 2 * random hsz - 1
   f[x + y * sz + 1] = 0
   while visited < hsz * hsz
      oldx = x
      oldy = y
      dir = random 4
      if dir = 1
         if x + 2 < sz : x += 2
      elif dir = 2
         if y + 2 < sz : y += 2
      elif dir = 3
         if x > 2 : x -= 2
      else
         if y > 2 : y -= 2
      .
      if f[y * sz + x + 1] = 1
         f[y * sz + x + 1] = 0
         f[(y + oldy) div 2 * sz + (x + oldx) div 2 + 1] = 0
         visited += 1
      .
   .
.
subr new_game
   make_maze
   show_maze
   gbackground -1
   initvars
.
proc show_monster col row dirx diry .
   x = col * c + c2 + c10 + dirx * step * c5
   y = row * c + c2 + c10 + diry * step * c5
   gcolor 900
   gcircle x y csc2
   gcolor 000
   gcircle x - c8 y - c10 c20
   gcircle x + c8 y - c10 c20
   gcircle x y + c5 c16 * abs step
.
subr show_me
   gcircle me_x me_y csc2
   gcolor 000
   gcircle me_x - c8 me_y - c10 c20
   gcircle me_x + c8 me_y - c10 c20
   glinewidth c16
   gline me_x - c10 me_y + c5 me_x + c10 me_y + c5
.
on mouse_down
   m_x = mouse_x
   m_y = mouse_y
   if stat < 0 : new_game
.
on mouse_move
   m_x = mouse_x
   m_y = mouse_y
.
func f_dir col row x y .
   return f[col * 2 + x + row * sz * 2 + sz + y * sz + 2]
.
func f_all col row .
   col2 = col * 2
   rsz2 = row * sz * 2
   v = f[col2 + rsz2 + sz + 3]
   v += f[col2 + rsz2 + sz + 1]
   v += f[col2 + rsz2 + 2 * sz + 2]
   v += f[col2 + rsz2 + 2]
   return v
.
proc do_x .
   if me_row_s > -2 and me_row_s < 2
      if dme_x > c5
         x = 1
      elif dme_x < -c5
         x = -1
      .
      if x <> 0
         if me_col_s = 0
            v = f_dir me_col me_row x 0
         .
         if v = 0
            me_col_s += x
            if me_col_s = 3 * x
               me_col += x
               me_col_s = -2 * x
            .
            me_row_s = 0
         .
      .
   .
.
proc do_y .
   if me_col_s > -2 and me_col_s < 2
      if dme_y > c5
         y = 1
      elif dme_y < -c5
         y = -1
      .
      if y <> 0
         if me_row_s = 0
            v = f_dir me_col me_row 0 y
         .
         if v = 0
            me_row_s += y
            if me_row_s = 3 * y
               me_row += y
               me_row_s = -2 * y
            .
            me_col_s = 0
         .
      .
   .
.
proc leveldone .
   # sound [ 440 0.2 494 0.2 523 0.4 ]
   stat = -1
   gcolor 000
   grect 0 0 100 100
   gtextsize 8
   gcolor 995
   gtext 5 14 "Super! You made it."
   gtextsize 6
   gtext 5 26 "Monsters: " & n_monster
   gtext 5 34 "Time: " & floor (systime - time_start - 0.5)
   gcolor 822
   gtext 5 50 "More and more monsters"
   gtext 5 58 "are coming and they"
   gtext 5 66 "are getting faster!"
   monster_delay -= 1
   n_monster += 1
.
proc move_me .
   if abs dme_x > abs dme_y
      do_x
      do_y
   else
      do_y
      do_x
   .
   me_x = me_col * c + c2 + c10 + me_col_s * c5
   me_y = me_row * c + c2 + c10 + me_row_s * c5
   if me_y > 100 - c2
      leveldone
   .
.
proc get_dir c r &x &y .
   xo = x
   yo = y
   repeat
      d = random 4
      if d = 1
         x = -1
      elif d = 2
         y = -1
      elif d = 3
         x = 1
      else
         y = 1
      .
      v = f_dir c r x y
      if v = 1
         x = 0
         y = 0
      elif xo = -x and yo = -y
         v = f_all c r
         if v <> 3
            x = 0
            y = 0
         .
      .
      until x <> 0 or y <> 0
   .
.
proc move_monster .
   for i to n_mo
      show_monster m_col[i] m_row[i] m_dirx[i] m_diry[i]
   .
   frame += 1
   if frame >= monster_delay
      frame = 0
      if step = 0
         for i to n_mo
            if m_row[i] = size
               m_row[i] = m_row[n_mo]
               m_col[i] = m_col[n_mo]
               m_dirx[i] = m_dirx[n_mo]
               m_diry[i] = m_diry[n_mo]
               n_mo -= 1
            .
         .
         for i to n_mo
            dx = m_dirx[i]
            dy = m_diry[i]
            get_dir m_col[i] m_row[i] dx dy
            m_dirx[i] = dx
            m_diry[i] = dy
         .
      .
      step += 1
      if step = 3
         step = -2
         for i to n_mo
            m_col[i] += m_dirx[i]
            m_row[i] += m_diry[i]
         .
      .
   .
.
on timer
   if stat = 1
      go_home
      stat = 0
   .
.
subr do_next
   gclear
   move_monster
   if stat = 0
      dme_x = m_x - me_x
      dme_y = m_y - me_y
      if abs dme_x + abs dme_y < 8 * c
         move_me
      .
      for i to n_mo
         if me_col = m_col[i] and me_row = m_row[i]
            # sound [ 330 0.2 294 0.2 262 0.4 ]
            stat = 1
            timer 1
         .
      .
      gcolor 070
   else
      gcolor 886
   .
   show_me
   if n_mo = 0
      stat = -1
      gcolor 000
      grect 0 0 100 100
      gtextsize 10
      gcolor 995
      gtext 20 60 "Game over"
      monster_delay = 8
      n_monster = 6
   .
.
on animate
   if stat >= 0 : do_next
.
new_game

