# Combat balls
#
rad = 2
n = 50
speed = 0.3
#
rad2 = rad * 2
len x[] n
len y[] n
len vx[] n
len vy[] n
len col[] n
len t[] n
#
subr init
   for i = 1 to n
      x[i] = randomf * (100 - rad2) + rad
      y[i] = randomf * (100 - rad2) + rad
      vx[i] = randomf * speed * 2 - speed
      vy[i] = randomf * speed * 2 - speed
      col[i] = 660
      if mode = 0 and i < n / 2 : col[i] = 600
   .
   if mode = 1
      col[1] = 600
      t[1] = systime
      timer 0.1
   else
      timer -1
   .
.
init
on mouse_down
   mode = (mode + 1) mod 2
   init
.
#
subr collide
   d = sqrt dist2
   dx /= d
   dy /= d
   v = (vx[i] - vx[j]) * dx + (vy[i] - vy[j]) * dy
   if v < 0
      dx *= v
      dy *= v
      vx[i] -= dx
      vy[i] -= dy
      vx[j] += dx
      vy[j] += dy
      #
      if mode = 0
         if randomf < 0.5
            col[i] = col[j]
         else
            col[j] = col[i]
         .
      else
         if col[j] = 600 : swap i j
         if col[i] = 600 and col[j] = 660
            col[j] = 600
            t[j] = systime
         .
      .
   .
.
on timer
   for i = 1 to n
      if col[i] = 600 and systime - t[i] > 5 : col[i] = 630
   .
   timer 0.1
.
gbackground 000
gtextsize 3
#
on animate
   gclear
   gcolor 222
   gline 0 0 100 0
   gline 100 0 100 100
   gline 100 100 0 100
   gline 0 100 0 0
   gcolor 333
   if mode = 0
      gtext 2 95 "Battle - click to change"
   else
      gtext 2 95 "Virus - click to change"
   .
   for i = 1 to n
      gcolor col[i]
      gcircle x[i] y[i] rad
      x[i] += vx[i]
      y[i] += vy[i]
   .
   for i = 1 to n - 1
      x = x[i]
      y = y[i]
      for j = i + 1 to n
         if abs (x - x[j]) < rad2 and abs (y - y[j]) < rad2
            dx = x - x[j]
            dy = y - y[j]
            dist2 = dx * dx + dy * dy
            if dist2 < rad2 * rad2 : collide
         .
      .
      if x > 100 - rad
         vx[i] = -abs vx[i]
      elif x < rad
         vx[i] = abs vx[i]
      .
      if y > 100 - rad
         vy[i] = -abs vy[i]
      elif y < rad
         vy[i] = abs vy[i]
      .
   .
.

