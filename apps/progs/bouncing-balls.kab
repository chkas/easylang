# Bouncing balls
#
rad = 8
n = 5
speed = 1.5
#
rad2 = rad * 2
for i = 1 to n
   x[] &= randomf * (100 - rad2) + rad
   y[] &= randomf * (100 - rad2) + rad
   vx[] &= randomf * speed * 2 - speed
   vy[] &= randomf * speed * 2 - speed
   c = 0
   for j = 1 to 3 : c = c * 10 + random 8 + 1
   col[] &= c
.
#
subr collide
   d = sqrt dist2
   dx /= d
   dy /= d
   v = (vx[i] - vx[j]) * dx + (vy[i] - vy[j]) * dy
   if v < 0
      dx *= v
      dy *= v
      vx[i] -= dx
      vy[i] -= dy
      vx[j] += dx
      vy[j] += dy
   .
.
on animate
   gclear
   gcolor 222
   gline 0 0 100 0
   gline 100 0 100 100
   gline 100 100 0 100
   gline 0 100 0 0
   for i = 1 to n
      gcolor col[i]
      gcircle x[i] y[i] rad
      x[i] += vx[i]
      y[i] += vy[i]
   .
   for i = 1 to n
      x = x[i]
      y = y[i]
      for j = i + 1 to n
         if abs (x - x[j]) < rad2 and abs (y - y[j]) < rad2
            dx = x - x[j]
            dy = y - y[j]
            dist2 = dx * dx + dy * dy
            if dist2 < rad2 * rad2 : collide
         .
      .
      if x > 100 - rad
         vx[i] = -abs vx[i]
      elif x < rad
         vx[i] = abs vx[i]
      .
      if y > 100 - rad
         vy[i] = -abs vy[i]
      elif y < rad
         vy[i] = abs vy[i]
      .
   .
.

