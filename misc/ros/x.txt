-------------------   10001th_prime.el  ---------------
fastfunc isprim - size 203
104743
-------------------   100_doors.el  ---------------
1
4
9
16
25
36
49
64
81
100
-------------------   100_prisoners.el  ---------------
random: 0%
optimal: 30.60%
-------------------   15_puzzle_game.el  ---------------
-------------------   21_game.el  ---------------
-------------------   4-rings_or_4-squares_puzzle.el  ---------------
low:1 hi:7 unique:1
4 7 1 3 2 6 5 
6 4 1 5 2 3 7 
3 7 2 1 5 4 6 
5 6 2 3 1 7 4 
7 3 2 5 1 4 6 
4 5 3 1 6 2 7 
6 4 5 1 2 7 3 
7 2 6 1 3 5 4 
8 solutions

low:3 hi:9 unique:1
7 8 3 4 5 6 9 
8 7 3 5 4 6 9 
9 6 4 5 3 7 8 
9 6 5 4 3 8 7 
4 solutions

low:0 hi:9 unique:0
2860 solutions

-------------------   99_bottles_of_beer.el  ---------------
99 bottles of beer on the wall
99 bottles of beer
Take one down, pass it around
98 bottles of beer on the wall

98 bottles of beer on the wall
98 bottles of beer
Take one down, pass it around
97 bottles of beer on the wall

97 bottles of beer on the wall
97 bottles of beer
Take one down, pass it around
96 bottles of beer on the wall

96 bottles of beer on the wall
96 bottles of beer
Take one down, pass it around
95 bottles of beer on the wall

95 bottles of beer on the wall
95 bottles of beer
Take one down, pass it around
94 bottles of beer on the wall

94 bottles of beer on the wall
94 bottles of beer
Take one down, pass it around
93 bottles of beer on the wall

93 bottles of beer on the wall
93 bottles of beer
Take one down, pass it around
92 bottles of beer on the wall

92 bottles of beer on the wall
92 bottles of beer
Take one down, pass it around
91 bottles of beer on the wall

91 bottles of beer on the wall
91 bottles of beer
Take one down, pass it around
90 bottles of beer on the wall

90 bottles of beer on the wall
90 bottles of beer
Take one down, pass it around
89 bottles of beer on the wall

89 bottles of beer on the wall
89 bottles of beer
Take one down, pass it around
88 bottles of beer on the wall

88 bottles of beer on the wall
88 bottles of beer
Take one down, pass it around
87 bottles of beer on the wall

87 bottles of beer on the wall
87 bottles of beer
Take one down, pass it around
86 bottles of beer on the wall

86 bottles of beer on the wall
86 bottles of beer
Take one down, pass it around
85 bottles of beer on the wall

85 bottles of beer on the wall
85 bottles of beer
Take one down, pass it around
84 bottles of beer on the wall

84 bottles of beer on the wall
84 bottles of beer
Take one down, pass it around
83 bottles of beer on the wall

83 bottles of beer on the wall
83 bottles of beer
Take one down, pass it around
82 bottles of beer on the wall

82 bottles of beer on the wall
82 bottles of beer
Take one down, pass it around
81 bottles of beer on the wall

81 bottles of beer on the wall
81 bottles of beer
Take one down, pass it around
80 bottles of beer on the wall

80 bottles of beer on the wall
80 bottles of beer
Take one down, pass it around
79 bottles of beer on the wall

79 bottles of beer on the wall
79 bottles of beer
Take one down, pass it around
78 bottles of beer on the wall

78 bottles of beer on the wall
78 bottles of beer
Take one down, pass it around
77 bottles of beer on the wall

77 bottles of beer on the wall
77 bottles of beer
Take one down, pass it around
76 bottles of beer on the wall

76 bottles of beer on the wall
76 bottles of beer
Take one down, pass it around
75 bottles of beer on the wall

75 bottles of beer on the wall
75 bottles of beer
Take one down, pass it around
74 bottles of beer on the wall

74 bottles of beer on the wall
74 bottles of beer
Take one down, pass it around
73 bottles of beer on the wall

73 bottles of beer on the wall
73 bottles of beer
Take one down, pass it around
72 bottles of beer on the wall

72 bottles of beer on the wall
72 bottles of beer
Take one down, pass it around
71 bottles of beer on the wall

71 bottles of beer on the wall
71 bottles of beer
Take one down, pass it around
70 bottles of beer on the wall

70 bottles of beer on the wall
70 bottles of beer
Take one down, pass it around
69 bottles of beer on the wall

69 bottles of beer on the wall
69 bottles of beer
Take one down, pass it around
68 bottles of beer on the wall

68 bottles of beer on the wall
68 bottles of beer
Take one down, pass it around
67 bottles of beer on the wall

67 bottles of beer on the wall
67 bottles of beer
Take one down, pass it around
66 bottles of beer on the wall

66 bottles of beer on the wall
66 bottles of beer
Take one down, pass it around
65 bottles of beer on the wall

65 bottles of beer on the wall
65 bottles of beer
Take one down, pass it around
64 bottles of beer on the wall

64 bottles of beer on the wall
64 bottles of beer
Take one down, pass it around
63 bottles of beer on the wall

63 bottles of beer on the wall
63 bottles of beer
Take one down, pass it around
62 bottles of beer on the wall

62 bottles of beer on the wall
62 bottles of beer
Take one down, pass it around
61 bottles of beer on the wall

61 bottles of beer on the wall
61 bottles of beer
Take one down, pass it around
60 bottles of beer on the wall

60 bottles of beer on the wall
60 bottles of beer
Take one down, pass it around
59 bottles of beer on the wall

59 bottles of beer on the wall
59 bottles of beer
Take one down, pass it around
58 bottles of beer on the wall

58 bottles of beer on the wall
58 bottles of beer
Take one down, pass it around
57 bottles of beer on the wall

57 bottles of beer on the wall
57 bottles of beer
Take one down, pass it around
56 bottles of beer on the wall

56 bottles of beer on the wall
56 bottles of beer
Take one down, pass it around
55 bottles of beer on the wall

55 bottles of beer on the wall
55 bottles of beer
Take one down, pass it around
54 bottles of beer on the wall

54 bottles of beer on the wall
54 bottles of beer
Take one down, pass it around
53 bottles of beer on the wall

53 bottles of beer on the wall
53 bottles of beer
Take one down, pass it around
52 bottles of beer on the wall

52 bottles of beer on the wall
52 bottles of beer
Take one down, pass it around
51 bottles of beer on the wall

51 bottles of beer on the wall
51 bottles of beer
Take one down, pass it around
50 bottles of beer on the wall

50 bottles of beer on the wall
50 bottles of beer
Take one down, pass it around
49 bottles of beer on the wall

49 bottles of beer on the wall
49 bottles of beer
Take one down, pass it around
48 bottles of beer on the wall

48 bottles of beer on the wall
48 bottles of beer
Take one down, pass it around
47 bottles of beer on the wall

47 bottles of beer on the wall
47 bottles of beer
Take one down, pass it around
46 bottles of beer on the wall

46 bottles of beer on the wall
46 bottles of beer
Take one down, pass it around
45 bottles of beer on the wall

45 bottles of beer on the wall
45 bottles of beer
Take one down, pass it around
44 bottles of beer on the wall

44 bottles of beer on the wall
44 bottles of beer
Take one down, pass it around
43 bottles of beer on the wall

43 bottles of beer on the wall
43 bottles of beer
Take one down, pass it around
42 bottles of beer on the wall

42 bottles of beer on the wall
42 bottles of beer
Take one down, pass it around
41 bottles of beer on the wall

41 bottles of beer on the wall
41 bottles of beer
Take one down, pass it around
40 bottles of beer on the wall

40 bottles of beer on the wall
40 bottles of beer
Take one down, pass it around
39 bottles of beer on the wall

39 bottles of beer on the wall
39 bottles of beer
Take one down, pass it around
38 bottles of beer on the wall

38 bottles of beer on the wall
38 bottles of beer
Take one down, pass it around
37 bottles of beer on the wall

37 bottles of beer on the wall
37 bottles of beer
Take one down, pass it around
36 bottles of beer on the wall

36 bottles of beer on the wall
36 bottles of beer
Take one down, pass it around
35 bottles of beer on the wall

35 bottles of beer on the wall
35 bottles of beer
Take one down, pass it around
34 bottles of beer on the wall

34 bottles of beer on the wall
34 bottles of beer
Take one down, pass it around
33 bottles of beer on the wall

33 bottles of beer on the wall
33 bottles of beer
Take one down, pass it around
32 bottles of beer on the wall

32 bottles of beer on the wall
32 bottles of beer
Take one down, pass it around
31 bottles of beer on the wall

31 bottles of beer on the wall
31 bottles of beer
Take one down, pass it around
30 bottles of beer on the wall

30 bottles of beer on the wall
30 bottles of beer
Take one down, pass it around
29 bottles of beer on the wall

29 bottles of beer on the wall
29 bottles of beer
Take one down, pass it around
28 bottles of beer on the wall

28 bottles of beer on the wall
28 bottles of beer
Take one down, pass it around
27 bottles of beer on the wall

27 bottles of beer on the wall
27 bottles of beer
Take one down, pass it around
26 bottles of beer on the wall

26 bottles of beer on the wall
26 bottles of beer
Take one down, pass it around
25 bottles of beer on the wall

25 bottles of beer on the wall
25 bottles of beer
Take one down, pass it around
24 bottles of beer on the wall

24 bottles of beer on the wall
24 bottles of beer
Take one down, pass it around
23 bottles of beer on the wall

23 bottles of beer on the wall
23 bottles of beer
Take one down, pass it around
22 bottles of beer on the wall

22 bottles of beer on the wall
22 bottles of beer
Take one down, pass it around
21 bottles of beer on the wall

21 bottles of beer on the wall
21 bottles of beer
Take one down, pass it around
20 bottles of beer on the wall

20 bottles of beer on the wall
20 bottles of beer
Take one down, pass it around
19 bottles of beer on the wall

19 bottles of beer on the wall
19 bottles of beer
Take one down, pass it around
18 bottles of beer on the wall

18 bottles of beer on the wall
18 bottles of beer
Take one down, pass it around
17 bottles of beer on the wall

17 bottles of beer on the wall
17 bottles of beer
Take one down, pass it around
16 bottles of beer on the wall

16 bottles of beer on the wall
16 bottles of beer
Take one down, pass it around
15 bottles of beer on the wall

15 bottles of beer on the wall
15 bottles of beer
Take one down, pass it around
14 bottles of beer on the wall

14 bottles of beer on the wall
14 bottles of beer
Take one down, pass it around
13 bottles of beer on the wall

13 bottles of beer on the wall
13 bottles of beer
Take one down, pass it around
12 bottles of beer on the wall

12 bottles of beer on the wall
12 bottles of beer
Take one down, pass it around
11 bottles of beer on the wall

11 bottles of beer on the wall
11 bottles of beer
Take one down, pass it around
10 bottles of beer on the wall

10 bottles of beer on the wall
10 bottles of beer
Take one down, pass it around
9 bottles of beer on the wall

9 bottles of beer on the wall
9 bottles of beer
Take one down, pass it around
8 bottles of beer on the wall

8 bottles of beer on the wall
8 bottles of beer
Take one down, pass it around
7 bottles of beer on the wall

7 bottles of beer on the wall
7 bottles of beer
Take one down, pass it around
6 bottles of beer on the wall

6 bottles of beer on the wall
6 bottles of beer
Take one down, pass it around
5 bottles of beer on the wall

5 bottles of beer on the wall
5 bottles of beer
Take one down, pass it around
4 bottles of beer on the wall

4 bottles of beer on the wall
4 bottles of beer
Take one down, pass it around
3 bottles of beer on the wall

3 bottles of beer on the wall
3 bottles of beer
Take one down, pass it around
2 bottles of beer on the wall

2 bottles of beer on the wall
2 bottles of beer
Take one down, pass it around
1 bottle of beer on the wall

1 bottle of beer on the wall
1 bottle of beer
Take one down, pass it around
No more bottles of beer on the wall
-------------------   A+B.el  ---------------
-------------------   ABC_problem.el  ---------------
A can be spelled in 2 ways
BARK can be spelled in 8 ways
BOOK can be spelled in 0 ways
TREAT can be spelled in 8 ways
COMMON can be spelled in 0 ways
SQUAD can be spelled in 8 ways
CONFUSE can be spelled in 32 ways
-------------------   Abundant,_deficient_and_perfect_number_classifications.el  ---------------
Perfect: 4
Abundant: 4953
Deficient: 15043
-------------------   Abundant_odd_numbers.el  ---------------
fastfunc sumdivs - size 166
     1    n:    945 sum:    975
     2    n:   1575 sum:   1649
     3    n:   2205 sum:   2241
     4    n:   2835 sum:   2973
     5    n:   3465 sum:   4023
     6    n:   4095 sum:   4641
     7    n:   4725 sum:   5195
     8    n:   5355 sum:   5877
     9    n:   5775 sum:   6129
    10    n:   5985 sum:   6495
    11    n:   6435 sum:   6669
    12    n:   6615 sum:   7065
    13    n:   6825 sum:   7063
    14    n:   7245 sum:   7731
    15    n:   7425 sum:   7455
    16    n:   7875 sum:   8349
    17    n:   8085 sum:   8331
    18    n:   8415 sum:   8433
    19    n:   8505 sum:   8967
    20    n:   8925 sum:   8931
    21    n:   9135 sum:   9585
    22    n:   9555 sum:   9597
    23    n:   9765 sum:  10203
    24    n:  10395 sum:  12645
    25    n:  11025 sum:  11946
  1000    n: 492975 sum: 519361

1st > 1B: 1000000575 sum: 1083561009
-------------------   Ackermann_function.el  ---------------
509
-------------------   Additive_primes.el  ---------------
2 3 5 7 11 23 29 41 43 47 61 67 83 89 101 113 131 137 139 151 157 173 179 191 193 197 199 223 227 229 241 263 269 281 283 311 313 317 331 337 353 359 373 379 397 401 409 421 443 449 461 463 467 487 
-------------------   Air_mass.el  ---------------
Angle   0 m      13700 m
------------------------
 0    1  1
 5   1.00380963 1.00380965
10   1.01538466 1.01538475
15   1.03517744 1.03517765
20   1.06399053 1.06399093
25   1.10305937 1.10306005
30   1.15418974 1.15419083
35   1.21998076 1.21998246
40   1.30418931 1.30419190
45   1.41234169 1.41234567
50   1.55280404 1.55281025
55   1.73875921 1.73876915
60   1.99212000 1.99213665
65   2.35199740 2.35202722
70   2.89531368 2.89537287
75   3.79582352 3.79596149
80   5.53885809 5.53928113
85   10.07896219 10.08115981
90   34.32981136 34.36666557
-------------------   Align_columns.el  ---------------
Given      a          text       file       of         many       lines,     where      fields     within     a          line                  
are        delineated by         a          single     'dollar'   character, write      a          program    
that       aligns     each       column     of         fields     by         ensuring   that       words      in         each                  
column     are        separated  by         at         least      one        space.     
Further,   allow      for        each       word       in         a          column     to         be         either     left                  
justified, right      justified, or         center     justified  within     its        column.    

      Given          a       text       file         of       many     lines,      where     fields     within          a       line           
        are delineated         by          a     single   'dollar' character,      write          a    program
       that     aligns       each     column         of     fields         by   ensuring       that      words         in       each           
     column        are  separated         by         at      least        one     space.
   Further,      allow        for       each       word         in          a     column         to         be     either       left           
 justified,      right justified,         or     center  justified     within        its    column.

   Given        a        text       file        of        many      lines,      where     fields     within        a        line               
    are    delineated     by          a       single    'dollar'  character,    write        a       program  
   that      aligns      each      column       of       fields       by      ensuring     that       words       in        each               
  column       are     separated     by         at        least       one      space.   
 Further,     allow       for       each       word        in          a       column       to         be       either      left               
justified,    right   justified,     or       center    justified   within       its      column.  
-------------------   Aliquot_sequence_classifications.el  ---------------
fastfunc sumprop - size 217
Number classification sequence
1 terminating  0
2 terminating  1 0
3 terminating  1 0
4 terminating  3 1 0
5 terminating  1 0
6 perfect  6
7 terminating  1 0
8 terminating  7 1 0
9 terminating  4 3 1 0
10 terminating  8 7 1 0
11 terminating  1 0
12 terminating  16 15 9 4 3 1 0
28 perfect  28
496 perfect  496
220 amicable  284 220
1184 amicable  1210 1184
12496 sociable (period 5)  14288 15472 14536 14264 12496
1264460 sociable (period 4)  1547860 1727636 1305184 1264460
790 aspiring  650 652 496 496
909 aspiring  417 143 25 6 6
562 cyclic (at 284)  284 220 284
1064 cyclic (at 1184)  1336 1184 1210 1184
1488 non-terminating (after 16 terms)   2480 3472 4464 8432 9424 10416 21328 22320 55056 95728 96720 236592 459792 881392 882384
15355717786080 non-terminating (term > 140737488355328)  44534663601120 144940087464480 471714103310688
-------------------   Almost_prime.el  ---------------
k=1 : 2 3 5 7 11 13 17 19 23 29 
k=2 : 4 6 9 10 14 15 21 22 25 26 
k=3 : 8 12 18 20 27 28 30 42 44 45 
k=4 : 16 24 36 40 54 56 60 81 84 88 
k=5 : 32 48 72 80 108 112 120 162 168 176 
-------------------   Amicable_pairs.el  ---------------
220 284
1184 1210
2620 2924
5020 5564
6232 6368
10744 10856
12285 14595
17296 18416
-------------------   Angle_difference_between_two_bearings.el  ---------------
45 20 -> 25
45 -45 -> 90
90 -85 -> 175
90 -95 -> -175
125 -45 -> 170
145 -45 -> -170
-88.64 29.48 -> -118.12
-159.04 -78.33 -> -80.71
29840.67 -70099.74 -> -139.58
33693.99 -165313.67 -> -72.34
-154146.66 1174.84 -> -161.50
42213.07 60175.77 -> 37.30
-------------------   Angles_(geometric),_normalization_and_conversion.el  ---------------
   degree    degree   gradian       mil    radian 
  ------------------------------------------------
        -2        -2    -2.222   -35.556    -0.035
        -1        -1    -1.111   -17.778    -0.017
         0         0         0         0         0
         1         1     1.111    17.778     0.017
         2         2     2.222    35.556     0.035
     6.283     6.283     6.981   111.701     0.110
        16        16    17.778   284.444     0.279
    57.296    57.296    63.662  1018.592     1.000
       359       359   398.889  6382.222     6.266
       399    39.000    43.333   693.333     0.681
      6399   279.000   310.000  4960.000     4.869
   1000000   280.000   311.111  4977.778     4.887

  gradian    degree   gradian       mil    radian 
  ------------------------------------------------
        -2    -1.800        -2       -32    -0.031
        -1    -0.900        -1       -16    -0.016
         0         0         0         0         0
         1     0.900         1        16     0.016
         2     1.800         2        32     0.031
     6.283     5.655     6.283   100.531     0.099
        16    14.400        16       256     0.251
    57.296    51.566    57.296   916.732     0.900
       359   323.100       359      5744     5.639
       399   359.100       399      6384     6.267
      6399   359.100   399.000  6384.000     6.267
   1000000         0         0         0         0

      mil    degree   gradian       mil    radian 
  ------------------------------------------------
        -2    -0.113    -0.125        -2    -0.002
        -1    -0.056    -0.062        -1    -0.001
         0         0         0         0         0
         1     0.056     0.062         1     0.001
         2     0.113     0.125         2     0.002
     6.283     0.353     0.393     6.283     0.006
        16     0.900         1        16     0.016
    57.296     3.223     3.581    57.296     0.056
       359    20.194    22.438       359     0.352
       399    22.444    24.938       399     0.392
      6399   359.944   399.938      6399     6.282
   1000000        90       100      1600     1.571

   radian    degree   gradian       mil    radian 
  ------------------------------------------------
        -2  -114.592  -127.324 -2037.183        -2
        -1   -57.296   -63.662 -1018.592        -1
         0         0         0         0         0
         1    57.296    63.662  1018.592         1
         2   114.592   127.324  2037.183         2
     6.283   360.000   400.000  6400.000     6.283
        16   196.732   218.592  3497.466     3.434
    57.296    42.806    47.563   761.002     0.747
       359    49.185    54.650   874.397     0.858
       399   181.016   201.129  3218.063     3.159
      6399   155.693   172.992  2767.877     2.717
   1000000   339.513   377.237  6035.788     5.926

-------------------   Animate_a_pendulum.el  ---------------
-------------------   Animation.el  ---------------
-------------------   Anti-primes.el  ---------------
1
2
4
6
12
24
36
48
60
120
180
240
360
720
840
1260
1680
2520
5040
7560
-------------------   Append_numbers_at_same_position_in_strings.el  ---------------
[ 11019 21120 31221 41322 51423 61524 71625 81726 91827 ]
-------------------   Archimedean_spiral.el  ---------------
-------------------   Arithmetic+Integer.el  ---------------
-------------------   Arithmetic-geometric_mean+Calculate_Pi.el  ---------------
3.141592653589794
-------------------   Arithmetic-geometric_mean.el  ---------------
0.8472130847939792
-------------------   Arithmetic_evaluation.el  ---------------
Inp: 4 * 
error: factor expected, got end of text
AST: ( n 4 0 ) ( * 1 0 ) Start: 2

Inp: 4.2 * ((5.3+8)*3 + 4)
AST: ( n 4.20 0 ) ( * 1 8 ) ( n 5.30 0 ) ( + 3 5 ) ( n 8 0 ) ( * 4 7 ) ( n 3 0 ) ( + 6 9 ) ( n 4 0 ) Start: 2
Eval: 184.38

Inp: 2.5 * 2 + 2 * 3.14
AST: ( n 2.50 0 ) ( * 1 3 ) ( n 2 0 ) ( + 2 6 ) ( n 2 0 ) ( * 5 7 ) ( n 3.14 0 ) Start: 4
Eval: 11.28

-------------------   Arithmetic_numbers.el  ---------------
The first 100 arithmetic numbers are:
  1   3   5   6   7  11  13  14  15  17 
 19  20  21  22  23  27  29  30  31  33 
 35  37  38  39  41  42  43  44  45  46 
 47  49  51  53  54  55  56  57  59  60 
 61  62  65  66  67  68  69  70  71  73 
 77  78  79  83  85  86  87  89  91  92 
 93  94  95  96  97  99 101 102 103 105 
107 109 110 111 113 114 115 116 118 119 
123 125 126 127 129 131 132 133 134 135 
137 138 139 140 141 142 143 145 147 149 

1000th arithmetic number: 1361
Composite arithmetic numbers: 782

10000th arithmetic number: 12953
Composite arithmetic numbers: 8458

100000th arithmetic number: 125587
Composite arithmetic numbers: 88219
-------------------   Array_concatenation.el  ---------------
[ 1 2 3 4 5 6 ]
-------------------   Array_length.el  ---------------
2
-------------------   Arrays.el  ---------------
1
2
3
4
5
-------------------   Ascending_primes.el  ---------------
123457 12347 1234789 123479 12356789 1235789 1237 12379 124567 1245689 12457 124679 12479 1249 12569 125789 12589 1259 12689 127 1279 1289 13 13457 13469 134789 13567 1367 13679 137 13789 139 1456789 145679 1459 1489 149 1567 15679 157 1579 167 17 1789 179 19 2 23 23456789 234589 23459 2347 23567 235679 2357 235789 23689 23789 2389 239 245789 2459 2467 25679 257 2579 2689 269 2789 29 3 345679 345689 3457 34589 3467 34679 3469 347 349 359 367 37 379 389 4567 457 467 4679 47 4789 479 5 5689 569 59 67 7 79 89 -------------------   Associative_array+Creation.el  ---------------
green
-------------------   Associative_array+Iteration.el  ---------------
type: t-shirt
color: red
size: xl
-------------------   Attractive_numbers.el  ---------------
4 6 8 9 10 12 14 15 18 20 21 22 25 26 27 28 30 32 33 34 35 38 39 42 44 45 46 48 49 50 51 52 55 57 58 62 63 65 66 68 69 70 72 74 75 76 77 78 80 82 85 86 87 91 92 93 94 95 98 99 102 105 106 108 110 111 112 114 115 116 117 118 119 120 -------------------   Averages+Arithmetic_mean.el  ---------------
4.50
-------------------   Averages+Mean_angle.el  ---------------
-0.00
-90
20.00
-------------------   Averages+Mean_time_of_day.el  ---------------
23:47:43
-------------------   Averages+Median.el  ---------------
4.40
4.25
-------------------   Averages+Mode.el  ---------------
[ 6 ]
[ 1 4 ]
-------------------   Averages+Pythagorean_means.el  ---------------
5.50
4.53
3.41
-------------------   Averages+Root_mean_square.el  ---------------
6.20
-------------------   Averages+Simple_moving_average.el  ---------------
   1     1
1.50  1.50
   2     2
   3  2.50
   4     3
4.67  3.80
4.67  4.20
   4  4.20
   3  3.80
   2     3
-------------------   Babbage_problem.el  ---------------
25264
-------------------   Balanced_brackets.el  ---------------
	1
[]   	1
[][]   	1
[[][]] 	1
][	0
][][	0
[]][[]	0
-------------------   Barnsley_fern.el  ---------------
-------------------   Bell_numbers.el  ---------------
1
2
5
15
52
203
877
4140
21147
115975
678570
4213597
27644437
190899322
1382958545
-------------------   Benford's_law.el  ---------------
-------------------   Binary_digits.el  ---------------
10
110010
10001100101000
-------------------   Binary_search.el  ---------------
4
-------------------   Bioinformatics+base_count.el  ---------------
   1: CGTA AAAA ATTA CAAC GTCC TTTG GCTA TCTC TTAA ACTC
  41: CTGC TAAA TGCT CGTG CTTT CCAA TTAT GTAA GCGT TCCG
  81: AGAC GGGG TGGT CGAT TCTG AGGA CAAA GGTC AAGA TGGA
 121: GCGC ATCG AACG CAAT AAGG ATCA TTTG ATGG GACG TTTC
 161: GTCG ACAA AGTC TTGT TTCG AGAG TAAC GGCT ACCG TCTT
 201: CGAT TCTG CTTA TAAC ACTA TGTT CTTA TGAA ATGG ATGT
 241: TCTG AGTT GGTC AGTC CCAA TGTG CGGG GTTT CTTT TAGT
 281: ACGT CGGG AGTG GTAT TATA TTTA ATTT TTCT ATAT AGCG
 321: ATCT GTAT TTAA GCAA TTCA TTTA GGTT ATCG CCGC GATG
 361: CTCG GTTC GGAC CGCC AAGC ATCT GGCT CCAC TGCT AGTG
 401: TCCT AAAT TTGA ATGG CAAA CACA AATA AGAT TTAG CAAT
 441: TCGT GTAG ACGA CCGG GGAC TTGC ATGA TGGG AGCA GCTT
 481: TGTT AAAC TACG AACG TAAT
A:  129
C:   97
G:  119
T:  155
Total:  500
-------------------   Bitwise_operations.el  ---------------
4294967284
2
11
9
44
2
-------------------   Blum_integer.el  ---------------
fastfunc semiprim - size 196
The first 50 Blum integers:
  21  33  57  69  77  93 129 133 141 161
 177 201 209 213 217 237 249 253 301 309
 321 329 341 381 393 413 417 437 453 469
 473 489 497 501 517 537 553 573 581 589
 597 633 649 669 681 713 717 721 737 749

The 26828th Blum integer is: 524273
-------------------   Boolean_values.el  ---------------
True
-------------------   Brazilian_numbers.el  ---------------
First 20  Brazilian numbers:
7 8 10 12 13 14 15 16 18 20 21 22 24 26 27 28 30 31 32 33 
First 20 odd Brazilian numbers:
7 13 15 21 27 31 33 35 39 43 45 51 55 57 63 65 69 73 75 77 
First 20 prime Brazilian numbers:
7 13 31 43 73 127 157 211 241 307 421 463 601 757 1093 1123 1483 1723 2551 2801 
-------------------   Brownian_tree.el  ---------------
-------------------   Bulls_and_cows.el  ---------------
-------------------   CUSIP.el  ---------------
037833100 is valid
17275R102 is valid
38259P508 is valid
594918104 is valid
68389X106 is invalid
68389X105 is valid
-------------------   Calculating_the_value_of_e.el  ---------------
2.71828
-------------------   Calendar.el  ---------------
                        [ picture of Snoopy goes here ]                        
                                      1969                                      
              January              February                March                
       Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa         
                 1  2  3  4                     1                     1         
        5  6  7  8  9 10 11   2  3  4  5  6  7  8   2  3  4  5  6  7  8         
       12 13 14 15 16 17 18   9 10 11 12 13 14 15   9 10 11 12 13 14 15         
       19 20 21 22 23 24 25  16 17 18 19 20 21 22  16 17 18 19 20 21 22         
       26 27 28 29 30 31     23 24 25 26 27 28     23 24 25 26 27 28 29         
                                                   30 31                        
               April                 May                  June                  
       Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa         
              1  2  3  4  5               1  2  3   1  2  3  4  5  6  7         
        6  7  8  9 10 11 12   4  5  6  7  8  9 10   8  9 10 11 12 13 14         
       13 14 15 16 17 18 19  11 12 13 14 15 16 17  15 16 17 18 19 20 21         
       20 21 22 23 24 25 26  18 19 20 21 22 23 24  22 23 24 25 26 27 28         
       27 28 29 30           25 26 27 28 29 30 31  29 30                        
                                                                                
               July                 August               September              
       Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa         
              1  2  3  4  5                  1  2      1  2  3  4  5  6         
        6  7  8  9 10 11 12   3  4  5  6  7  8  9   7  8  9 10 11 12 13         
       13 14 15 16 17 18 19  10 11 12 13 14 15 16  14 15 16 17 18 19 20         
       20 21 22 23 24 25 26  17 18 19 20 21 22 23  21 22 23 24 25 26 27         
       27 28 29 30 31        24 25 26 27 28 29 30  28 29 30                     
                             31                                                 
             October               November              December               
       Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa         
                 1  2  3  4                     1      1  2  3  4  5  6         
        5  6  7  8  9 10 11   2  3  4  5  6  7  8   7  8  9 10 11 12 13         
       12 13 14 15 16 17 18   9 10 11 12 13 14 15  14 15 16 17 18 19 20         
       19 20 21 22 23 24 25  16 17 18 19 20 21 22  21 22 23 24 25 26 27         
       26 27 28 29 30 31     23 24 25 26 27 28 29  28 29 30 31                  
                             30                                                 
-------------------   Call_a_function.el  ---------------
9
3 2
25
-------------------   Cantor_set.el  ---------------
-------------------   Carmichael_3_strong_pseudoprimes.el  ---------------
3 11 17
5 29 73
5 17 29
5 13 17
7 19 67
7 31 73
7 13 31
7 23 41
7 73 103
7 13 19
13 61 397
13 37 241
13 97 421
13 37 97
13 37 61
17 41 233
17 353 1201
19 43 409
19 199 271
23 199 353
29 113 1093
29 197 953
31 991 15361
31 61 631
31 151 1171
31 61 271
31 61 211
31 271 601
31 181 331
37 109 2017
37 73 541
37 613 1621
37 73 181
37 73 109
41 1721 35281
41 881 12041
41 101 461
41 241 761
41 241 521
41 73 137
41 61 101
43 631 13567
43 271 5827
43 127 2731
43 127 1093
43 211 757
43 631 1597
43 127 211
43 211 337
43 433 643
43 547 673
43 3361 3907
47 3359 6073
47 1151 1933
47 3727 5153
53 157 2081
53 79 599
53 157 521
59 1451 2089
61 421 12841
61 181 5521
61 1301 19841
61 277 2113
61 181 1381
61 541 3001
61 661 2521
61 271 571
61 241 421
61 3361 4021
-------------------   Case-sensitivity_of_identifiers.el  ---------------
The three dogs are named Benjamin, Samba, and Bernie.
-------------------   Catalan_numbers+Pascal's_triangle.el  ---------------
1
2
5
14
42
132
429
1430
4862
16796
58786
208012
742900
2674440
9694845
-------------------   Catalan_numbers.el  ---------------
1
1
2
5
14
42
132
429
1430
4862
16796
58786
208012
742900
2674440
-------------------   Chaos_game.el  ---------------
-------------------   Character_codes.el  ---------------
97
a
-------------------   Chebyshev_coefficients.el  ---------------
1.647169475390
-0.232299371615
-0.053715114622
0.002458235267
0.000282119057
-0.000007722229
-0.000000589856
0.000000011521
0.000000000660
-0.000000000010
-------------------   Chinese_remainder_theorem.el  ---------------
23
-------------------   Chinese_zodiac.el  ---------------
1935
      Wood Pig Yin 13/60
      乙亥

1938
      Earth Tiger Yang 16/60
      戊寅

1968
      Earth Monkey Yang 46/60
      戊申

1972
      Water Rat Yang 50/60
      壬子

1976
      Fire Dragon Yang 54/60
      丙辰

1984
      Wood Rat Yang 1/60
      甲子

2017
      Fire Rooster Yin 34/60
      丁酉

-------------------   Chowla_numbers.el  ---------------
fastfunc chowla - size 177
chowla number from 1 to 37
  1: 0
  2: 0
  3: 0
  4: 2
  5: 0
  6: 5
  7: 0
  8: 6
  9: 3
  10: 7
  11: 0
  12: 15
  13: 0
  14: 9
  15: 8
  16: 14
  17: 0
  18: 20
  19: 0
  20: 21
  21: 10
  22: 13
  23: 0
  24: 35
  25: 5
  26: 15
  27: 12
  28: 27
  29: 0
  30: 41
  31: 0
  32: 30
  33: 14
  34: 19
  35: 12
  36: 54
  37: 0

There are 25 primes up to 100
There are 168 primes up to 1,000
There are 1,229 primes up to 10,000
There are 9,592 primes up to 100,000
There are 78,498 primes up to 1,000,000
There are 664,579 primes up to 10,000,000

6 is a perfect number
28 is a perfect number
496 is a perfect number
8,128 is a perfect number
33,550,336 is a perfect number
There are 5 perfect mumbers up to 35,000,000
-------------------   Circular_primes.el  ---------------
fastfunc prime - size 207
2
3
5
7
11
13
17
37
79
113
197
199
337
1193
3779
11939
19937
193939
199933
-------------------   Code_Golf:_Code_Golf.el  ---------------
Code GolfCode Golf-------------------   Collections.el  ---------------
[ 1 2 3 ]
[
 [ 1 2 ]
 [ 3 4 ]
 [ 5 6 ]
]
-------------------   Colour_bars+Display.el  ---------------
-------------------   Combinations.el  ---------------
[ 1 2 3 ]
[ 1 2 4 ]
[ 1 2 5 ]
[ 1 3 4 ]
[ 1 3 5 ]
[ 1 4 5 ]
[ 2 3 4 ]
[ 2 3 5 ]
[ 2 4 5 ]
[ 3 4 5 ]
-------------------   Combinations_and_permutations.el  ---------------
=> Exact results:
P(1,0)=1
P(2,0)=1
P(3,1)=3
P(4,1)=4
P(5,1)=5
P(6,2)=30
P(7,2)=42
P(8,2)=56
P(9,3)=504
P(10,3)=720
P(11,3)=990
P(12,4)=11880
C(10,3)=120
C(20,6)=38760
C(30,10)=30045015
C(40,13)=12033222880
C(50,16)=4923689695575

=> Floating point approximations:
P(5,1)=5e0
P(50,16)=1.03e26
P(500,166)=3.53e434
P(1000,333)=5.97e971
P(5000,1666)=6.86e6025
P(15000,5000)=9.65e20469
C(100,33)=2.95e26
C(200,66)=7.27e53
C(300,100)=4.16e81
C(400,133)=1.26e109
C(500,166)=3.93e136
C(600,200)=2.51e164
C(700,233)=8.10e191
C(800,266)=2.65e219
C(900,300)=1.74e247
C(1000,333)=5.78e274
-------------------   Combinations_with_repetitions.el  ---------------
iced iced 
iced jam 
iced plain 
jam jam 
jam plain 
plain plain 

220 results with 10 donuts
-------------------   Comments.el  ---------------
-------------------   Compare_a_list_of_strings.el  ---------------
[ "AA" "BB" "CC" ]
ascending

[ "AA" "AA" "AA" ]
all equal

[ "AA" "CC" "BB" ]

[ "AA" "ACB" "BB" "CC" ]
ascending

[ "single_element" ]
all equal
ascending

-------------------   Compare_length_of_two_strings.el  ---------------
Language - 8
Easy - 4

Rosetta - 7
Code - 4

-------------------   Conditional_structures.el  ---------------
10 is divisible by 2
-------------------   Conjugate_a_Latin_verb.el  ---------------
Present indicative tense of amare:
amo
amas
amat
amamus
amatis
amant

Present indicative tense of dare:
do
das
dat
damus
datis
dant

-------------------   Continued_fraction.el  ---------------
1.41421356
2.71828183
3.14159257
-------------------   Convert_seconds_to_compound_duration.el  ---------------
2 hr, 59 sec
1 d
9 wk, 6 d, 10 hr, 40 min
-------------------   Conway's_Game_of_Life.el  ---------------
-------------------   Copy_a_string.el  ---------------
hello
-------------------   Count_how_many_vowels_and_consonants_occur_in_a_string.el  ---------------
There are 22 vowels and 31 consonants
-------------------   Count_in_factors.el  ---------------
1: 1
2: 2
3: 3
4: 2 x 2
5: 5
6: 2 x 3
7: 7
8: 2 x 2 x 2
9: 3 x 3
10: 2 x 5
11: 11
12: 2 x 2 x 3
13: 13
14: 2 x 7
15: 3 x 5
16: 2 x 2 x 2 x 2
17: 17
18: 2 x 3 x 3
19: 19
20: 2 x 2 x 5
21: 3 x 7
22: 2 x 11
23: 23
24: 2 x 2 x 2 x 3
25: 5 x 5
26: 2 x 13
27: 3 x 3 x 3
28: 2 x 2 x 7
29: 29
30: 2 x 3 x 5
-------------------   Count_in_octal.el  ---------------
0
1
2
3
4
5
6
7
10
11
12
.
.
377777777777777766
377777777777777767
377777777777777770
377777777777777771
377777777777777772
377777777777777773
377777777777777774
377777777777777775
377777777777777776
377777777777777777
400000000000000000
-------------------   Count_occurrences_of_a_substring.el  ---------------
3
2
4
0
1
-------------------   Count_the_coins.el  ---------------
242
139946140451
13398445413854540
-------------------   Cullen_and_Woodall_numbers.el  ---------------
3 9 25 65 161 385 897 2049 4609 10241 22529 49153 106497 229377 491521 1048577 2228225 4718593 9961473 20971521 
1 7 23 63 159 383 895 2047 4607 10239 22527 49151 106495 229375 491519 1048575 2228223 4718591 9961471 20971519 
-------------------   Cumulative_standard_deviation.el  ---------------
2 0
4 1
4 0.94
4 0.87
5 0.98
5 1
7 1.40
9 2
-------------------   Curzon_numbers.el  ---------------
The first 50 Curzon numbers using a base of   2:
    1    2    5    6    9   14   18   21   26   29
   30   33   41   50   53   54   65   69   74   78
   81   86   89   90   98  105  113  114  125  134
  138  141  146  153  158  165  173  174  186  189
  194  198  209  210  221  230  233  245  249  254

One thousandth: 8646

The first 50 Curzon numbers using a base of   4:
    1    3    7    9   13   15   25   27   37   39
   43   45   49   57   67   69   73   79   87   93
   97   99  105  115  127  135  139  153  163  165
  169  175  177  183  189  193  199  205  207  213
  219  235  249  253  255  265  267  273  277  279

One thousandth: 9375

The first 50 Curzon numbers using a base of   6:
    1    6   30   58   70   73   90  101  105  121
  125  146  153  166  170  181  182  185  210  233
  241  242  266  282  290  322  373  381  385  390
  397  441  445  446  450  453  530  557  562  585
  593  601  602  605  606  621  646  653  670  685

One thousandth: 20717

The first 50 Curzon numbers using a base of   8:
    1   14   35   44   72   74   77  129  131  137
  144  149  150  185  200  219  236  266  284  285
  299  309  336  357  381  386  390  392  402  414
  420  441  455  459  470  479  500  519  527  536
  557  582  600  602  617  639  654  674  696  735

One thousandth: 22176

The first 50 Curzon numbers using a base of  10:
    1    9   10   25  106  145  190  193  238  253
  306  318  349  385  402  462  486  526  610  649
  658  678  733  762  810  990  994 1033 1077 1125
 1126 1141 1149 1230 1405 1422 1441 1485 1509 1510
 1513 1606 1614 1630 1665 1681 1690 1702 1785 1837

One thousandth: 46845

-------------------   Day_of_the_week.el  ---------------
Christmas in 2011 is on Sunday
Christmas in 2016 is on Sunday
Christmas in 2022 is on Sunday
Christmas in 2033 is on Sunday
Christmas in 2039 is on Sunday
Christmas in 2044 is on Sunday
Christmas in 2050 is on Sunday
Christmas in 2061 is on Sunday
Christmas in 2067 is on Sunday
Christmas in 2072 is on Sunday
Christmas in 2078 is on Sunday
Christmas in 2089 is on Sunday
Christmas in 2095 is on Sunday
Christmas in 2101 is on Sunday
Christmas in 2107 is on Sunday
Christmas in 2112 is on Sunday
Christmas in 2118 is on Sunday
-------------------   Day_of_the_week_of_Christmas_and_New_Year.el  ---------------
2021-12-25 is on Saturday
2022-1-1 is on Saturday
-------------------   De_Polignac_numbers.el  ---------------
1
127
149
251
331
337
373
509
599
701
757
809
877
905
907
959
977
997
1019
1087
1199
1207
1211
1243
1259
1271
1477
1529
1541
1549
1589
1597
1619
1649
1657
1719
1759
1777
1783
1807
1829
1859
1867
1927
1969
1973
1985
2171
2203
2213
-------------------   Department_numbers.el  ---------------
  2  3  7
  2  4  6
  2  6  4
  2  7  3
  4  1  7
  4  2  6
  4  3  5
  4  5  3
  4  6  2
  4  7  1
  6  1  5
  6  2  4
  6  4  2
  6  5  1
-------------------   Descending_primes.el  ---------------
98765431 98764321 987631 987541 9875321 98731 9871 986543 98641 98621 98543 9851 983 98321 97 97654321 97651 9754321 975421 9743 9721 971 9643 96431 9631 953 9521 94321 9431 9421 941 8765321 87643 8764321 876431 87641 87631 8761 87541 8753 87421 8741 8731 865321 86531 8641 863 8543 853 8521 8431 83 821 7 76543 76541 7643 764321 76421 7621 761 75431 7541 751 743 73 7321 71 653 6521 643 6421 641 631 61 5 5431 541 53 521 43 431 421 41 3 31 2 -------------------   Detect_division_by_zero.el  ---------------
0
1
-------------------   Determine_if_a_string_has_all_the_same_characters.el  ---------------
'' length 0
 --> ok

'   ' length 3
 --> ok

'2' length 1
 --> ok

'333' length 3
 --> ok

'.55' length 3
 --> different: '5' (35h)'  position: 2

'tttTTT' length 6
 --> different: 'T' (54h)'  position: 4

'4444 444k' length 9
 --> different: ' ' (20h)'  position: 5

-------------------   Determine_if_a_string_has_all_unique_characters.el  ---------------
'' length 0
ok

'.' length 1
ok

'abcABC' length 6
ok

'XYZ ZYX' length 7
 --> duplicates: 'Z' (5Ah)'  positions: 3, 5

'1234567890ABCDEFGHIJKLMN0PQRSTUVWXYZ' length 36
 --> duplicates: '0' (30h)'  positions: 10, 25

-------------------   Determine_if_a_string_is_numeric.el  ---------------
abc is not numeric
21a is not numeric
1234 is numeric
-13 is numeric
7.65 is numeric
-------------------   Digital_root.el  ---------------
627615
Additive persistence: 2
Digital root: 9
39390
Additive persistence: 2
Digital root: 6
588225
Additive persistence: 2
Digital root: 3
393900588225
Additive persistence: 2
Digital root: 9
-------------------   Disarium_numbers.el  ---------------
0
1
2
3
4
5
6
7
8
9
89
135
175
518
598
1306
1676
2427
2646798
-------------------   Dot_product.el  ---------------
3
-------------------   Dragon_curve.el  ---------------
-------------------   Draw_a_clock.el  ---------------
-------------------   Draw_a_pixel.el  ---------------
-------------------   Draw_a_rotating_cube.el  ---------------
-------------------   Eban_numbers.el  ---------------
2 - 1000: 2 4 6 30 32 34 36 40 42 44 46 50 52 54 56 60 62 64 66 (count=19)
1000 - 4000: 2000 2002 2004 2006 2030 2032 2034 2036 2040 2042 2044 2046 2050 2052 2054 2056 2060 2062 2064 2066 4000 (count=21)
2 - 10000: (count=79)
2 - 100000: (count=399)
2 - 1000000: (count=399)
2 - 10000000: (count=1599)
2 - 100000000: (count=7999)
-------------------   Elementary_cellular_automaton.el  ---------------
.###.##.#.#.#.#..#..
*** ERROR: index out of bounds
** LINE: 8 **
-------------------   Empty_string.el  ---------------
empty
-------------------   Entropy.el  ---------------
1.85
-------------------   Ethiopian_multiplication.el  ---------------
17	34
8	
4	
2	
1	544
=	578
-------------------   Euler's_sum_of_powers_conjecture.el  ---------------
133 110 84 27 144
-------------------   Evaluate_binomial_coefficients.el  ---------------
10
-------------------   Even_or_odd.el  ---------------
13 is odd
-------------------   Execute_Brain****.el  ---------------
Hello World!
-------------------   Exponentiation_operator.el  ---------------
9.87
0.25
-------------------   Extreme_floating_point_values.el  ---------------
positive  infinity: inf
negative infinity: -inf
negative zero: 0
not a number: nan
+inf + 2 = inf
+inf - 10.1 = inf
+inf + -inf = nan
0 * +inf = nan
1/-0 = -inf
NaN + 1 = nan
NaN + NaN = nan
NaN == NaN = 0
0 = -0 = 1
-------------------   Factorial.el  ---------------
5040
-------------------   Factorial_primes.el  ---------------
1! + 1 = 2
2! + 1 = 3
3! - 1 = 5
3! + 1 = 7
4! - 1 = 23
6! - 1 = 719
7! - 1 = 5039
11! + 1 = 39916801
12! - 1 = 479001599
14! - 1 = 87178291199
-------------------   Factors_of_an_integer.el  ---------------
[ 1 2 3 4 5 6 8 9 10 12 15 16 18 20 24 30 36 40 45 48 60 72 80 90 120 144 180 240 360 720 ]
-------------------   Fairshare_between_two_and_more.el  ---------------
2: 0 1 1 0 1 0 0 1 1 0 0 1 0 1 1 0 1 0 0 1 0 1 1 0 0 
3: 0 1 2 1 2 0 2 0 1 1 2 0 2 0 1 0 1 2 2 0 1 0 1 2 1 
5: 0 1 2 3 4 1 2 3 4 0 2 3 4 0 1 3 4 0 1 2 4 0 1 2 3 
11: 0 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 0 2 3 4 
-------------------   Farey_sequence.el  ---------------
1:  0/1 1/1
2:  0/1 1/2 1/1
3:  0/1 1/3 1/2 2/3 1/1
4:  0/1 1/4 1/3 1/2 2/3 3/4 1/1
5:  0/1 1/5 1/4 1/3 2/5 1/2 3/5 2/3 3/4 4/5 1/1
6:  0/1 1/6 1/5 1/4 1/3 2/5 1/2 3/5 2/3 3/4 4/5 5/6 1/1
7:  0/1 1/7 1/6 1/5 1/4 2/7 1/3 2/5 3/7 1/2 4/7 3/5 2/3 5/7 3/4 4/5 5/6 6/7 1/1
8:  0/1 1/8 1/7 1/6 1/5 1/4 2/7 1/3 3/8 2/5 3/7 1/2 4/7 3/5 5/8 2/3 5/7 3/4 4/5 5/6 6/7 7/8 1/1
9:  0/1 1/9 1/8 1/7 1/6 1/5 2/9 1/4 2/7 1/3 3/8 2/5 3/7 4/9 1/2 5/9 4/7 3/5 5/8 2/3 5/7 3/4 7/9 4/5 5/6 6/7 7/8 8/9 1/1
10:  0/1 1/10 1/9 1/8 1/7 1/6 1/5 2/9 1/4 2/7 3/10 1/3 3/8 2/5 3/7 4/9 1/2 5/9 4/7 3/5 5/8 2/3 7/10 5/7 3/4 7/9 4/5 5/6 6/7 7/8 8/9 9/10 1/1
11:  0/1 1/11 1/10 1/9 1/8 1/7 1/6 2/11 1/5 2/9 1/4 3/11 2/7 3/10 1/3 4/11 3/8 2/5 3/7 4/9 5/11 1/2 6/11 5/9 4/7 3/5 5/8 7/11 2/3 7/10 5/7 8/11 3/4 7/9 4/5 9/11 5/6 6/7 7/8 8/9 9/10 10/11 1/1
100: 3044 items
200: 12232 items
300: 27398 items
400: 48678 items
500: 76116 items
600: 109500 items
700: 149018 items
800: 194750 items
900: 246326 items
1000: 304192 items
-------------------   Fibonacci_sequence.el  ---------------
14930352
-------------------   Filter.el  ---------------
[ 2 4 6 8 ]
-------------------   Find_common_directory_path.el  ---------------
/home/user1/tmp
-------------------   Find_limit_of_recursion.el  ---------------
-------------------   Find_square_difference.el  ---------------
501
-------------------   Find_the_intersection_of_a_line_with_a_plane.el  ---------------
[ 0 -5 5 ]
-------------------   FizzBuzz.el  ---------------
1
2
Fizz
4
Buzz
Fizz
7
8
Fizz
Buzz
11
Fizz
13
14
FizzBuzz
16
17
Fizz
19
Buzz
Fizz
22
23
Fizz
Buzz
26
Fizz
28
29
FizzBuzz
31
32
Fizz
34
Buzz
Fizz
37
38
Fizz
Buzz
41
Fizz
43
44
FizzBuzz
46
47
Fizz
49
Buzz
Fizz
52
53
Fizz
Buzz
56
Fizz
58
59
FizzBuzz
61
62
Fizz
64
Buzz
Fizz
67
68
Fizz
Buzz
71
Fizz
73
74
FizzBuzz
76
77
Fizz
79
Buzz
Fizz
82
83
Fizz
Buzz
86
Fizz
88
89
FizzBuzz
91
92
Fizz
94
Buzz
Fizz
97
98
Fizz
Buzz
-------------------   Forest_fire.el  ---------------
-------------------   Four_bit_adder.el  ---------------
1101 + 1011 = 11000
-------------------   Fractal_tree.el  ---------------
-------------------   Function_definition.el  ---------------
35
-------------------   Generate_lower_case_ASCII_alphabet.el  ---------------
[ "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z" ]
abcdefghijklmnopqrstuvwxyz
-------------------   Giuga_numbers.el  ---------------
30
858
1722
66198
-------------------   Goldbach's_comet.el  ---------------
  1  1  1  2  1  2  2  2  2  3
  3  3  2  3  2  4  4  2  3  4
  3  4  5  4  3  5  3  4  6  3
  5  6  2  5  6  5  5  7  4  5
  8  5  4  9  4  5  7  3  6  8
  5  6  8  6  7 10  6  6 12  4
  5 10  3  7  9  6  5  8  7  8
 11  6  5 12  4  8 11  5  8 10
  5  6 13  9  6 11  7  7 14  6
  8 13  5  8 11  7  9 13  8  9
5402
-------------------   Golden_ratio+Convergence.el  ---------------
Iterations: 13
Result: 1.6180327869
Error: -0.0000012019
-------------------   Greatest_common_divisor.el  ---------------
5
-------------------   Greatest_element_of_a_list.el  ---------------
9
-------------------   Greyscale_bars+Display.el  ---------------
-------------------   Guess_the_number+With_feedback.el  ---------------
-------------------   Guess_the_number.el  ---------------
-------------------   Hailstone_sequence.el  ---------------
27 has length 112 with 27 82 41 124 ... 8 4 2 1 
77031 has length 351
-------------------   Harshad_or_Niven_series.el  ---------------
1 2 3 4 5 6 7 8 9 10 12 18 20 21 24 27 30 36 40 42 
1002
-------------------   Haversine_formula.el  ---------------
-------------------   Hello_world+Graphical.el  ---------------
-------------------   Hello_world+Newbie.el  ---------------
-------------------   Hello_world+Newline_omission.el  ---------------
-------------------   Hello_world+Text.el  ---------------
Hello world!
-------------------   Hilbert_curve.el  ---------------
-------------------   Hofstadter_Q_sequence.el  ---------------
1 1 2 3 3 4 5 5 6 6 
502
49798
-------------------   Honaker_primes.el  ---------------
fastfunc nextprim - size 171
(32 131) (56 263) (88 457) (175 1039) (176 1049) (182 1091) (212 1301) (218 1361) (227 1433) (248 1571) (293 1913) (295 1933) (323 2141) (331 2221) (338 2273) (362 2441) (377 2591) (386 2663) (394 2707) (397 2719) (398 2729) (409 2803) (439 3067) (446 3137) (457 3229) (481 3433) (499 3559) (508 3631) (563 4091) (571 4153) (595 4357) (599 4397) (635 4703) (637 4723) (655 4903) (671 5009) (728 5507) (751 5701) (752 5711) (755 5741) (761 5801) (767 5843) (779 5927) (820 6301) (821 6311) (826 6343) (827 6353) (847 6553) (848 6563) (857 6653) -------------------   Horizontal_sundial_calculations.el  ---------------
-------------------   ISBN13_check_digit.el  ---------------
978-0596528126 is a valid ISBN
978-0596528120 is not a valid ISBN
978-1788399081 is a valid ISBN
978-1788399083 is not a valid ISBN
-------------------   Identity_matrix.el  ---------------
[
 [ 1 0 0 0 ]
 [ 0 1 0 0 ]
 [ 0 0 1 0 ]
 [ 0 0 0 1 ]
]
-------------------   Idiomatically_determine_all_the_lowercase_and_uppercase_letters.el  ---------------
abcdefghijklmnopqrstuvwxyz
ABCDEFGHIJKLMNOPQRSTUVWXYZ-------------------   Idoneal_numbers.el  ---------------
 1 2 3 4 5 6 7 8 9 10 12 13 15 16 18 21 22 24 25 28 30 33 37 40 42 45 48 57 58 60 70 72 78 85 88 93 102 105 112 120 130 133 165 168 177 190 210 232 240 253 273 280 312 330 345 357 385 408 462 520 760 840 1320 1365 1848-------------------   Implicit_type_conversion.el  ---------------
32
-------------------   Inconsummate_numbers_in_base_10.el  ---------------
62 63 65 75 84 95 161 173 195 216 261 266 272 276 326 371 372 377 381 383 386 387 395 411 416 422 426 431 432 438 441 443 461 466 471 476 482 483 486 488 491 492 493 494 497 498 516 521 522 527 

6996
-------------------   Increment_a_numerical_string.el  ---------------
13
-------------------   Infinity.el  ---------------
inf
inf
-------------------   Input_loop.el  ---------------
-------------------   Integer_comparison.el  ---------------
-------------------   Integer_sequence.el  ---------------
0
1
2
3
4
5
6
7
8
9
10
.
.
9007199254740983
9007199254740984
9007199254740985
9007199254740986
9007199254740987
9007199254740988
9007199254740989
9007199254740990
9007199254740991
9007199254740992
-------------------   Isqrt_(integer_square_root)_of_X.el  ---------------
Integer square roots from 0 to 65:
0 1 1 1 2 2 2 2 2 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 8 8 

Integer square roots of 7^n
1 2
3 18
5 129
7 907
9 6352
11 44467
13 311269
15 2178889
17 15252229
19 106765608
21 747359260
-------------------   Jewels_and_stones.el  ---------------
3
0
-------------------   Jordan-Pólya_numbers.el  ---------------
fastfunc jpnum - size 314
    1    2    4    6    8   12   16   24   32   36
   48   64   72   96  120  128  144  192  216  240
  256  288  384  432  480  512  576  720  768  864
  960 1024 1152 1296 1440 1536 1728 1920 2048 2304
 2592 2880 3072 3456 3840 4096 4320 4608 5040 5184

The largest Jordan-Polya number before 100 million: 99532800
-------------------   Josephus_problem.el  ---------------
prisoners: 41
step size: 3
final survivor: 30
-------------------   Julia_set.el  ---------------
-------------------   Klarner-Rado_sequence.el  ---------------
1 3 4 7 9 10 13 15 19 21 22 27 28 31 39 40 43 45 46 55 57 58 63 64 67 79 81 82 85 87 91 93 94 111 115 117 118 121 127 129 130 135 136 139 159 163 165 166 171 172 175 183 187 189 190 193 202 223 231 235 237 238 243 244 247 255 256 259 261 262 271 273 274 279 280 283 319 327 331 333 334 343 345 346 351 352 355 364 367 375 379 381 382 387 388 391 405 406 409 418 

8487 157653 2911581 54381285 -------------------   Knapsack_problem+0-1.el  ---------------
weight: 396
value: 1030
items:
  map
  compass
  water
  sandwich
  glucose
  banana
  suntan cream
  waterproof trousers
  waterproof overclothes
  note-case
  sunglasses
  socks
-------------------   Knuth_shuffle.el  ---------------
[ 1 2 3 ]
-------------------   Koch_curve.el  ---------------
-------------------   Lah_numbers.el  ---------------
0
0 1
0 2 1 
0 6 6 1 
0 24 36 12 1 
0 120 240 120 20 1 
0 720 1800 1200 300 30 1 
0 5040 15120 12600 4200 630 42 1 
0 40320 141120 141120 58800 11760 1176 56 1 
0 362880 1451520 1693440 846720 211680 28224 2016 72 1 
0 3628800 16329600 21772800 12700800 3810240 635040 60480 3240 90 1 
0 39916800 199584000 299376000 199584000 69854400 13970880 1663200 118800 4950 110 1 
0 479001600 2634508800 4390848000 3293136000 1317254400 307359360 43908480 3920400 217800 7260 132 1 
-------------------   Langton's_ant.el  ---------------
-------------------   Largest_number_divisible_by_its_digits.el  ---------------
9867312
-------------------   Largest_proper_divisor_of_n.el  ---------------
  1  1  1  2  1  3  1  4  3  5
  1  6  1  7  5  8  1  9  1 10
  7 11  1 12  5 13  9 14  1 15
  1 16 11 17  7 18  1 19 13 20
  1 21  1 22 15 23  1 24  7 25
 17 26  1 27 11 28 19 29  1 30
  1 31 21 32 13 33  1 34 23 35
  1 36  1 37 25 38 11 39  1 40
 27 41  1 42 17 43 29 44  1 45
 13 46 31 47 19 48  1 49 33 50
-------------------   Leonardo_numbers.el  ---------------
L0:1 L1:1 add:1
1 1 3 5 9 15 25 41 67 109 177 287 465 753 1219 1973 3193 5167 8361 13529 21891 35421 57313 92735 150049 
L0:0 L1:1 add:0
0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 
-------------------   Letter_frequency.el  ---------------
a: 12
b: 1
c: 11
d: 3
e: 20
f: 3
g: 3
h: 5
i: 6
j: 0
k: 1
l: 8
m: 3
n: 13
o: 17
p: 4
q: 0
r: 12
s: 11
t: 22
u: 8
v: 0
w: 0
x: 1
y: 1
z: 1
-------------------   Levenshtein_distance.el  ---------------
3
8
-------------------   Literals+Floating_point.el  ---------------
57.10
57.10
57.10
-------------------   Literals+Integer.el  ---------------
57
57
-------------------   Literals+String.el  ---------------
EasyLang
简
-------------------   Logical_operations.el  ---------------
0 0 1
0 1 1
0 1 0
1 1 0
-------------------   Long_multiplication.el  ---------------
340282366920938463463374607431768211456
-------------------   Longest_common_substring.el  ---------------
test
test
estin
-------------------   Look-and-say_sequence.el  ---------------
1
11
21
1211
111221
312211
13112221
1113213211
31131211131221
13211311123113112211
11131221133112132113212221
-------------------   Loop_over_multiple_arrays_simultaneously.el  ---------------
aA1
bB2
cC3
-------------------   Loops+Break.el  ---------------
15
6
4
1
11
19
4
2
16
7
8
13
19
15
17
6
13
2
13
5
9
15
6
20
17
19
14
12
7
1
3
9
18
3
7
9
18
11
18
11
15
6
7
20
17
20
19
1
11
7
16
7
4
2
6
4
20
17
6
15
2
1
19
14
1
10
14
9
5
1
7
16
18
17
12
16
9
18
10
-------------------   Loops+Do-while.el  ---------------
1
2
3
4
5
6
-------------------   Loops+Downward_for.el  ---------------
10
9
8
7
6
5
4
3
2
1
0
-------------------   Loops+For.el  ---------------
*
**
***
****
*****
-------------------   Loops+For_with_a_specified_step.el  ---------------
0
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98
100
-------------------   Loops+Foreach.el  ---------------
5
1
19
25
12
1
14
7
-------------------   Loops+Increment_loop_index_within_loop_body.el  ---------------
fastfunc isprim - size 203
n=1 43
n=2 89
n=3 179
n=4 359
n=5 719
n=6 1439
n=7 2879
n=8 5779
n=9 11579
n=10 23159
n=11 46327
n=12 92657
n=13 185323
n=14 370661
n=15 741337
n=16 1482707
n=17 2965421
n=18 5930887
n=19 11861791
n=20 23723597
n=21 47447201
n=22 94894427
n=23 189788857
n=24 379577741
n=25 759155483
n=26 1518310967
n=27 3036621941
n=28 6073243889
n=29 12146487779
n=30 24292975649
n=31 48585951311
n=32 97171902629
n=33 194343805267
n=34 388687610539
n=35 777375221081
n=36 1554750442183
n=37 3109500884389
n=38 6219001768781
n=39 12438003537571
n=40 24876007075181
n=41 49752014150467
n=42 99504028301131
-------------------   Loops+Infinite.el  ---------------
-------------------   Loops+N_plus_one_half.el  ---------------
1, 2, 3, 4, 5, 6, 7, 8, 9, 10-------------------   Loops+Nested.el  ---------------
20 at 2,3
-------------------   Loops+While.el  ---------------
1024
512
256
128
64
32
16
8
4
2
1
-------------------   MD5+Implementation.el  ---------------
0cc175b9c0f1b6a831c399e269772661
900150983cd24fb0d6963f7d28e17f72
f96b697d7cb7938d525a2f31aaf161d0
c3fcd3d76192e4007dfb496cca67e13b
d174ab98d277d9f5a5611c2c9f419d9f
57edf4a22be3c955ac49da2e2107b67a
-------------------   Magnanimous_numbers.el  ---------------
fastfunc isprim - size 168
1-45: 0 1 2 3 4 5 6 7 8 9 11 12 14 16 20 21 23 25 29 30 32 34 38 41 43 47 49 50 52 56 58 61 65 67 70 74 76 83 85 89 92 94 98 101 110
241-250: 17992 19972 20209 20261 20861 22061 22201 22801 22885 24407
391-400: 486685 488489 515116 533176 551558 559952 595592 595598 600881 602081
-------------------   Mandelbrot_set.el  ---------------
fastfunc iter - size 144
-------------------   Mastermind.el  ---------------
-------------------   Matrix_transposition.el  ---------------
[
 [ 1 2 3 4 ]
 [ 5 6 7 8 ]
 [ 9 10 11 12 ]
]

[
 [ 1 5 9 ]
 [ 2 6 10 ]
 [ 3 7 11 ]
 [ 4 8 12 ]
]
-------------------   Maximum_triangle_path_sum.el  ---------------
1320
-------------------   Maze_generation.el  ---------------
-------------------   Maze_solving.el  ---------------
-------------------   McNuggets_problem.el  ---------------
43
-------------------   Middle_three_digits.el  ---------------
123
234
345
654
000
000
123
100
100
234
error
error
error
error
error
error
error
-------------------   Minesweeper_game.el  ---------------
-------------------   Möbius_function.el  ---------------
  1 -1 -1  0 -1  1 -1  0  0  1
 -1  0 -1  1  1  0 -1  0 -1  0
  1  1 -1  0  0  1  0  0 -1 -1
 -1  0  1  1  1  0 -1  1  1  0
 -1 -1 -1  0  0  1 -1  0  0  0
  1  0 -1  0  1  0  1  1 -1  0
 -1  1  0  0  1 -1 -1  0  1 -1
 -1  0 -1  1  0  0  1 -1 -1  0
  0  1 -1  0  1  1  1  0 -1  0
  1  0  1  1  1  0 -1  0  0  0
-------------------   Modular_inverse.el  ---------------
1969
-------------------   Monte_Carlo_methods.el  ---------------
3.1452
3.1434
3.1428
3.1415
-------------------   Monty_Hall_problem.el  ---------------
If you stick to your choice, you have a 33.31 percent chance to win
If you switched, you have a 66.69 percent chance to win
-------------------   Morse_code.el  ---------------
s ...
o ---
s ...
   
s ...
o ---
s ...
-------------------   Motzkin_numbers.el  ---------------
fastfunc isprim - size 141
1
1
2 is a prime
4
9
21
51
127 is a prime
323
835
2188
5798
15511 is a prime
41835
113634
310572
853467
2356779
6536382
18199284
50852019
142547559
400763223
1129760415
3192727797
9043402501
25669818476
73007772802
208023278209
593742784829
1697385471211
4859761676391
13933569346707
40002464776083
114988706524270
330931069469828
953467954114363 is a prime
2750016719520991
7939655757745265
-------------------   Mouse_position.el  ---------------
-------------------   Multifactorial.el  ---------------
degree 1: 1 2 6 24 120 720 5040 40320 362880 3628800
degree 2: 1 2 3 8 15 48 105 384 945 3840
degree 3: 1 2 3 4 10 18 28 80 162 280
degree 4: 1 2 3 4 5 12 21 32 45 120
degree 5: 1 2 3 4 5 6 14 24 36 50
-------------------   Multiplication_tables.el  ---------------
        1   2   3   4   5   6   7   8   9  10  11  12
     ------------------------------------------------
   1|   1   2   3   4   5   6   7   8   9  10  11  12
   2|       4   6   8  10  12  14  16  18  20  22  24
   3|           9  12  15  18  21  24  27  30  33  36
   4|              16  20  24  28  32  36  40  44  48
   5|                  25  30  35  40  45  50  55  60
   6|                      36  42  48  54  60  66  72
   7|                          49  56  63  70  77  84
   8|                              64  72  80  88  96
   9|                                  81  90  99 108
  10|                                     100 110 120
  11|                                         121 132
  12|                                             144
-------------------   Munching_squares.el  ---------------
-------------------   Musical_scale.el  ---------------
-------------------   N'th.el  ---------------
0 to 25:
0th 1st 2nd 3rd 4th 5th 6th 7th 8th 9th 10th 11th 12th 13th 14th 15th 16th 17th 18th 19th 20th 21st 22nd 23rd 24th 25th 
250 to 265:
250th 251st 252nd 253rd 254th 255th 256th 257th 258th 259th 260th 261st 262nd 263rd 264th 265th 
1000 to 1025:
1000th 1001st 1002nd 1003rd 1004th 1005th 1006th 1007th 1008th 1009th 1010th 1011th 1012th 1013th 1014th 1015th 1016th 1017th 1018th 1019th 1020th 1021st 1022nd 1023rd 1024th 1025th -------------------   N-queens_problem.el  ---------------
Solution 1

  Q . . . . . . . 
  . . . . Q . . . 
  . . . . . . . Q 
  . . . . . Q . . 
  . . Q . . . . . 
  . . . . . . Q . 
  . Q . . . . . . 
  . . . Q . . . . 

92 solutions
-------------------   Narcissistic_decimal_number.el  ---------------
0
1
2
3
4
5
6
7
8
9
153
370
371
407
1634
8208
9474
54748
92727
93084
548834
1741725
4210818
9800817
9926315
-------------------   Nim_game.el  ---------------
-------------------   Nth_root.el  ---------------
3.1416
-------------------   Numbers_which_are_not_the_sum_of_distinct_squares.el  ---------------
2 3 6 7 8 11 12 15 18 19 22 23 24 27 28 31 32 33 43 44 47 48 60 67 72 76 92 96 108 112 128 -------------------   Numbers_which_are_the_cube_roots_of_the_product_of_their_proper_divisors.el  ---------------
1 24 30 40 42 54 56 66 70 78 88 102 104 105 110 114 128 130 135 136 138 152 154 165 170 174 182 184 186 189 190 195 222 230 231 232 238 246 248 250 255 258 266 273 282 285 286 290 296 297 500th: 2526
5000th: 23118
50000th: 223735
-------------------   Numbers_with_equal_rises_and_falls.el  ---------------
fastfunc risefall - size 253
   1   2   3   4   5   6   7   8   9  11  22  33  44  55  66  77  88  99 101 102
 103 104 105 106 107 108 109 111 120 121 130 131 132 140 141 142 143 150 151 152
 153 154 160 161 162 163 164 165 170 171 172 173 174 175 176 180 181 182 183 184
 185 186 187 190 191 192 193 194 195 196 197 198 201 202 203 204 205 206 207 208
 209 212 213 214 215 216 217 218 219 222 230 231 232 240 241 242 243 250 251 252
 253 254 260 261 262 263 264 265 270 271 272 273 274 275 276 280 281 282 283 284
 285 286 287 290 291 292 293 294 295 296 297 298 301 302 303 304 305 306 307 308
 309 312 313 314 315 316 317 318 319 323 324 325 326 327 328 329 333 340 341 342
 343 350 351 352 353 354 360 361 362 363 364 365 370 371 372 373 374 375 376 380
 381 382 383 384 385 386 387 390 391 392 393 394 395 396 397 398 401 402 403 404

41909002
-------------------   O'Halloran_numbers.el  ---------------
8 12 20 36 44 60 84 116 140 156 204 260 380 420 660 924 -------------------   One-dimensional_cellular_automata.el  ---------------
.###.##.#.#.#.#..#..
.#.#####.#.#.#......
..##...##.#.#.......
..##...###.#........
..##...#.##.........
..##....###.........
..##....#.#.........
..##.....#..........
..##................
..##................
-------------------   Own_digits_power_sum.el  ---------------
fastfunc next - size 245
153
370
371
407
1634
8208
9474
54748
92727
93084
548834
1741725
4210818
9800817
9926315
24678050
24678051
88593477
-------------------   Padovan_n-step_number_sequences.el  ---------------
2: 1 1 1 2 2 3 4 5 7 9 12 16 21 28 37 
3: 1 1 1 2 3 4 6 9 13 19 28 41 60 88 129 
4: 1 1 1 2 3 5 7 11 17 26 40 61 94 144 221 
5: 1 1 1 2 3 5 8 12 19 30 47 74 116 182 286 
6: 1 1 1 2 3 5 8 13 20 32 51 81 129 205 326 
7: 1 1 1 2 3 5 8 13 21 33 53 85 136 218 349 
8: 1 1 1 2 3 5 8 13 21 34 54 87 140 225 362 
-------------------   Pairs_with_common_factors.el  ---------------
1-100: 0 0 0 1 1 4 4 7 9 14 14 21 21 28 34 41 41 52 52 63 71 82 82 97 101 114 122 137 137 158 158 173 185 202 212 235 235 254 268 291 291 320 320 343 363 386 386 417 423 452 470 497 497 532 546 577 597 626 626 669 669 700 726 757 773 818 818 853 877 922 922 969 969 1006 1040 1079 1095 1148 1148 1195 1221 1262 1262 1321 1341 1384 1414 1461 1461 1526 1544 1591 1623 1670 1692 1755 1755 1810 1848 1907
1000: 195309
-------------------   Palindrome_detection.el  ---------------
rotor is a palindrome
rosetta is not a palindrome
step on no pets is a palindrome
été is a palindrome
🦊😀🦊 is a palindrome
-------------------   Pangram_checker.el  ---------------
This is a test.

The quick brown fox jumps over the lazy dog.
  --> pangram

The quick brown fox jumped over the lazy dog.

QwErTyUiOpAsDfGhJkLzXcVbNm
  --> pangram

-------------------   Particle_fountain.el  ---------------
-------------------   Pentagram.el  ---------------
-------------------   Percolation+Mean_run_density.el  ---------------
p: 0.100 theory: 0.090
    n    sim
   100   0.090
  1000   0.088
 10000   0.089

p: 0.300 theory: 0.210
    n    sim
   100   0.213
  1000   0.207
 10000   0.208

p: 0.500 theory: 0.250
    n    sim
   100   0.251
  1000   0.247
 10000   0.248

p: 0.700 theory: 0.210
    n    sim
   100   0.213
  1000   0.207
 10000   0.208

p: 0.900 theory: 0.090
    n    sim
   100   0.103
  1000   0.090
 10000   0.089

-------------------   Perfect_numbers.el  ---------------
6
28
496
8128
-------------------   Periodic_table.el  ---------------
Atomic number 1-> 1, 1
Atomic number 2-> 1, 18
Atomic number 29-> 4, 11
Atomic number 42-> 5, 6
Atomic number 57-> 8, 4
Atomic number 58-> 8, 5
Atomic number 59-> 8, 6
Atomic number 71-> 8, 18
Atomic number 72-> 6, 4
Atomic number 89-> 9, 4
Atomic number 90-> 9, 5
Atomic number 103-> 9, 18
Atomic number 113-> 7, 13
-------------------   Perlin_noise.el  ---------------
0.13691995878400012
-------------------   Permutations+Derangements.el  ---------------
[
 [ 2 1 4 3 ]
 [ 2 3 4 1 ]
 [ 2 4 1 3 ]
 [ 3 1 4 2 ]
 [ 3 4 1 2 ]
 [ 3 4 2 1 ]
 [ 4 3 2 1 ]
 [ 4 3 1 2 ]
 [ 4 1 2 3 ]
]
counted / calculated
0: 1 1
1: 0 0
2: 1 1
3: 2 2
4: 9 9
5: 44 44
6: 265 265
7: 1854 1854
8: 14833 14833
9: 133496 133496
-------------------   Permutations.el  ---------------
[ 1 2 3 ]
[ 1 3 2 ]
[ 2 1 3 ]
[ 2 3 1 ]
[ 3 2 1 ]
[ 3 1 2 ]
-------------------   Pick_random_element.el  ---------------
autumn
-------------------   Plot_coordinate_pairs.el  ---------------
-------------------   Polynomial_regression.el  ---------------
y = 1 + 2x + 3x^2
  0    1   1
  1    6   6
  2   17  17
  3   34  34
  4   57  57
  5   86  86
  6  121 121
  7  162 162
  8  209 209
  9  262 262
 10  321 321
-------------------   Polyspiral.el  ---------------
-------------------   Price_fraction.el  ---------------
0.05 -> 0.10
0.10 -> 0.18
0.15 -> 0.26
0.20 -> 0.32
0.25 -> 0.38
0.30 -> 0.44
0.35 -> 0.50
0.40 -> 0.54
0.45 -> 0.58
0.50 -> 0.62
0.55 -> 0.66
0.60 -> 0.70
0.65 -> 0.74
0.70 -> 0.78
0.75 -> 0.82
0.80 -> 0.86
0.85 -> 0.90
0.90 -> 0.94
0.95 -> 0.98
1.00 -> 1.00
-------------------   Primality_by_trial_division.el  ---------------
1
-------------------   Prime_decomposition.el  ---------------
[ 6361 69431 20394401 ]
-------------------   Primes:_n*2^m+1.el  ---------------
1 0 2
2 0 3
3 1 7
4 0 5
5 1 11
6 0 7
7 2 29
8 1 17
9 1 19
10 0 11
11 1 23
12 0 13
13 2 53
14 1 29
15 1 31
16 0 17
17 3 137
18 0 19
19 6 1217
20 1 41
21 1 43
22 0 23
23 1 47
24 2 97
25 2 101
26 1 53
27 2 109
28 0 29
29 1 59
30 0 31
31 8 7937
32 3 257
33 1 67
34 2 137
35 1 71
36 0 37
37 2 149
38 5 1217
39 1 79
40 0 41
41 1 83
42 0 43
43 2 173
44 1 89
45 2 181
-------------------   Pseudo-random_numbers+Middle-square_method.el  ---------------
959861
333139
981593
524817
432883
-------------------   Pythagoras_tree.el  ---------------
-------------------   Quickselect_algorithm.el  ---------------
0
1
2
3
4
5
6
7
8
9
-------------------   Quine.el  ---------------
S$ = "print strchar 83 & strchar 36 & strchar 32 & strchar 61 & strchar 32 & strchar 34 & S$ & strchar 34 & strchar 10 & S$"
print strchar 83 & strchar 36 & strchar 32 & strchar 61 & strchar 32 & strchar 34 & S$ & strchar 34 & strchar 10 & S$
-------------------   Radical_of_an_integer.el  ---------------
fastfunc radnf - size 205
First 50 radicals: 1 2 3 2 5 6 7 2 3 10 11 6 13 14 15 2 17 6 19 10 21 22 23 6 5 26 3 14 29 30 31 2 33 34 35 6 37 38 39 10 41 42 43 22 15 46 47 6 7 10

radical(99999) = 33333
radical(499999) = 3937
radical(999999) = 111111


Distribution of radicals:
0: 1
1: 78734
2: 288726
3: 379720
4: 208034
5: 42492
6: 2285
7: 8
-------------------   Random_numbers.el  ---------------
Average: 0.98810
Std deviation: 0.50494
-------------------   Rare_numbers.el  ---------------
-------------------   Real_constants_and_functions.el  ---------------
3.14
1.41
3
20
1
1024
-------------------   Recaman's_sequence.el  ---------------
[ 0 1 3 6 2 7 13 20 12 21 11 22 10 23 9 ]
42
-------------------   Remove_duplicate_elements.el  ---------------
[ 1 2 4 5 15 3 ]
-------------------   Remove_vowels_from_a_string.el  ---------------
Th Qck Brwn Fx Jmpd vr th Lzy Dg's Bck
-------------------   Repeat_a_string.el  ---------------
hahahahaha
-------------------   Return_multiple_values.el  ---------------
Sum: 12
Difference: 2
-------------------   Reverse_a_string.el  ---------------
olleh
-------------------   Riordan_numbers.el  ---------------
First 32 Riordan numbers:
1
0
1
1
3
6
15
36
91
232
603
1585
4213
11298
30537
83097
227475
625992
1730787
4805595
13393689
37458330
105089229
295673994
834086421
2358641376
6684761125
18985057351
54022715451
154000562758
439742222071
1257643249140
-------------------   Roman_numerals+Decode.el  ---------------
1990
2008
1666
-------------------   Roman_numerals+Encode.el  ---------------
MCMXC
MMVIII
MDCLXVI
-------------------   Rot-13.el  ---------------
Ebfrggn Pbqr
-------------------   Round-robin_tournament_schedule.el  ---------------
12 players

round  1:  1   2   3   4   5   6  
          12  11  10   9   8   7  

round  2:  1  12   2   3   4   5  
          11  10   9   8   7   6  

round  3:  1  11  12   2   3   4  
          10   9   8   7   6   5  

round  4:  1  10  11  12   2   3  
           9   8   7   6   5   4  

round  5:  1   9  10  11  12   2  
           8   7   6   5   4   3  

round  6:  1   8   9  10  11  12  
           7   6   5   4   3   2  

round  7:  1   7   8   9  10  11  
           6   5   4   3   2  12  

round  8:  1   6   7   8   9  10  
           5   4   3   2  12  11  

round  9:  1   5   6   7   8   9  
           4   3   2  12  11  10  

round 10:  1   4   5   6   7   8  
           3   2  12  11  10   9  

round 11:  1   3   4   5   6   7  
           2  12  11  10   9   8  
-------------------   Run-length_encoding.el  ---------------
WWWWWWWWWWWWBWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWBWWWWWWWWWWWWWW
12W 1B 12W 3B 24W 1B 14W
WWWWWWWWWWWWBWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWBWWWWWWWWWWWWWW
-------------------   Sattolo_cycle.el  ---------------
[ 3 1 2 ]
-------------------   Search_a_list.el  ---------------
Bush found at 5
Washington not found
-------------------   Self-describing_numbers.el  ---------------
1210
2020
21200
3211000
42101000
521001000
6210001000
-------------------   Semiprime.el  ---------------
4 6 9 10 14 15 21 22 25 26 33 34 35 38 39 46 49 51 55 57 58 62 65 69 74 77 82 85 86 87 91 93 94 95 -------------------   Sequence:_smallest_number_with_exactly_n_divisors.el  ---------------
1
2
4
6
16
12
64
24
36
48
1024
60
4096
192
144
-------------------   Sequence_of_non-squares.el  ---------------
2
3
5
6
7
8
10
11
12
13
14
15
17
18
19
20
21
22
23
24
26
27
No squares found
-------------------   Sequence_of_primes_by_trial_division.el  ---------------
[ 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 ]
-------------------   Set,_the_card_game.el  ---------------
Take 10 cards:
one   solid   red    diamond  
one   open    purple squiggle 
three open    red    oval     
three solid   red    diamond  
three solid   red    oval     
two   open    red    diamond  
two   striped red    squiggle 
one   solid   purple diamond  
one   solid   red    oval     
three solid   green  squiggle 

Set:
one   solid   red    diamond  
three open    red    oval     
two   striped red    squiggle 

Set:
one   open    purple squiggle 
two   striped red    squiggle 
three solid   green  squiggle 

-------------------   Set_puzzle.el  ---------------
Cards:
two   open    red    oval 
three striped green  oval 
two   open    purple diamond 
one   solid   purple diamond 
two   open    red    squiggle 
one   open    purple oval 
two   open    green  oval 
two   open    purple diamond 
one   striped purple squiggle 

Sets:
three striped green  oval 
one   solid   purple diamond 
two   open    red    squiggle 

two   open    purple diamond 
two   open    red    squiggle 
two   open    green  oval 

one   solid   purple diamond 
one   open    purple oval 
one   striped purple squiggle 

two   open    red    squiggle 
two   open    green  oval 
two   open    purple diamond 

 --------------------------
Cards:
two   striped red    squiggle 
two   open    green  diamond 
three solid   red    oval 
one   striped green  diamond 
two   striped green  oval 
one   striped red    squiggle 
two   solid   purple diamond 
one   open    red    oval 
three striped green  squiggle 
one   solid   green  diamond 
three striped green  squiggle 
one   striped green  diamond 

Sets:
one   striped green  diamond 
two   striped green  oval 
three striped green  squiggle 

one   striped green  diamond 
two   striped green  oval 
three striped green  squiggle 

two   striped green  oval 
three striped green  squiggle 
one   striped green  diamond 

two   striped green  oval 
three striped green  squiggle 
one   striped green  diamond 

two   solid   purple diamond 
one   open    red    oval 
three striped green  squiggle 

two   solid   purple diamond 
one   open    red    oval 
three striped green  squiggle 

-------------------   Seven-sided_dice_from_five-sided_dice.el  ---------------
1.123
1.122
1.122
1.119
0.838
0.836
0.840
-> not uniform

1.000
0.999
0.996
1.002
1.000
0.999
1.004
-> uniform
-------------------   Shoelace_formula_for_polygonal_area.el  ---------------
30
-------------------   Short-circuit_evaluation.el  ---------------
1 and 1
->a: 1
->b: 1
-> true

1 or 1
->a: 1
-> true

0 and 1
->a: 0

0 or 1
->a: 0
->b: 1
-> true
-------------------   Show_ASCII_table.el  ---------------
 32: Spc 48: 0   64: @   80: P   96: `  112: p  
 33: !   49: 1   65: A   81: Q   97: a  113: q  
 34: "   50: 2   66: B   82: R   98: b  114: r  
 35: #   51: 3   67: C   83: S   99: c  115: s  
 36: $   52: 4   68: D   84: T  100: d  116: t  
 37: %   53: 5   69: E   85: U  101: e  117: u  
 38: &   54: 6   70: F   86: V  102: f  118: v  
 39: '   55: 7   71: G   87: W  103: g  119: w  
 40: (   56: 8   72: H   88: X  104: h  120: x  
 41: )   57: 9   73: I   89: Y  105: i  121: y  
 42: *   58: :   74: J   90: Z  106: j  122: z  
 43: +   59: ;   75: K   91: [  107: k  123: {  
 44: ,   60: <   76: L   92: \  108: l  124: |  
 45: -   61: =   77: M   93: ]  109: m  125: }  
 46: .   62: >   78: N   94: ^  110: n  126: ~  
 47: /   63: ?   79: O   95: _  111: o  127: Del
-------------------   Sierpinski_arrowhead_curve.el  ---------------
-------------------   Sierpinski_carpet.el  ---------------
-------------------   Sierpinski_pentagon.el  ---------------
-------------------   Sierpinski_triangle+Graphical.el  ---------------
-------------------   Sieve_of_Eratosthenes.el  ---------------
2
3
5
7
11
13
17
19
23
29
31
37
41
43
47
53
59
61
67
71
73
79
83
89
97
-------------------   Simple_turtle_graphics.el  ---------------
-------------------   Sisyphus_sequence.el  ---------------
   1   3   6   3   8   4   2   1   8   4
   2   1  12   6   3  16   8   4   2   1
  18   9  28  14   7  30  15  44  22  11
  42  21  58  29  70  35  78  39  86  43
  96  48  24  12   6   3  62  31  92  46
  23  90  45 116  58  29 102  51 130  65
 148  74  37 126  63 160  80  40  20  10
   5 106  53 156  78  39 146  73 182  91
 204 102  51 178  89 220 110  55 192  96
  48  24  12   6   3 142  71 220 110  55
-------------------   Sleep.el  ---------------
-------------------   Smarandache-Wellin_primes.el  ---------------
fastfunc isprim - size 141
[ 2 23 2357 ]
[ 4194123321127 547233879626521 547233979727521 ]
-------------------   Snake.el  ---------------
-------------------   Solve_triangle_solitare_puzzle.el  ---------------

┏━━━━━━━━━┓
┃    ·    ┃
┃   ● ●   ┃
┃  ● ● ●  ┃
┃ ● ● ● ● ┃
┃● ● ● ● ●┃
┗━━━━━━━━━┛
┏━━━━━━━━━┓
┃    ●    ┃
┃   · ●   ┃
┃  · ● ●  ┃
┃ ● ● ● ● ┃
┃● ● ● ● ●┃
┗━━━━━━━━━┛
┏━━━━━━━━━┓
┃    ●    ┃
┃   · ●   ┃
┃  ● · ·  ┃
┃ ● ● ● ● ┃
┃● ● ● ● ●┃
┗━━━━━━━━━┛
┏━━━━━━━━━┓
┃    ·    ┃
┃   · ·   ┃
┃  ● · ●  ┃
┃ ● ● ● ● ┃
┃● ● ● ● ●┃
┗━━━━━━━━━┛
┏━━━━━━━━━┓
┃    ·    ┃
┃   ● ·   ┃
┃  · · ●  ┃
┃ · ● ● ● ┃
┃● ● ● ● ●┃
┗━━━━━━━━━┛
┏━━━━━━━━━┓
┃    ·    ┃
┃   ● ●   ┃
┃  · · ·  ┃
┃ · ● ● · ┃
┃● ● ● ● ●┃
┗━━━━━━━━━┛
┏━━━━━━━━━┓
┃    ·    ┃
┃   ● ●   ┃
┃  · ● ·  ┃
┃ · · ● · ┃
┃● · ● ● ●┃
┗━━━━━━━━━┛
┏━━━━━━━━━┓
┃    ·    ┃
┃   ● ●   ┃
┃  · ● ●  ┃
┃ · · · · ┃
┃● · · ● ●┃
┗━━━━━━━━━┛
┏━━━━━━━━━┓
┃    ·    ┃
┃   · ●   ┃
┃  · · ●  ┃
┃ · · ● · ┃
┃● · · ● ●┃
┗━━━━━━━━━┛
┏━━━━━━━━━┓
┃    ·    ┃
┃   · ·   ┃
┃  · · ·  ┃
┃ · · ● ● ┃
┃● · · ● ●┃
┗━━━━━━━━━┛
┏━━━━━━━━━┓
┃    ·    ┃
┃   · ·   ┃
┃  · · ●  ┃
┃ · · ● · ┃
┃● · · ● ·┃
┗━━━━━━━━━┛
┏━━━━━━━━━┓
┃    ·    ┃
┃   · ·   ┃
┃  · · ·  ┃
┃ · · · · ┃
┃● · ● ● ·┃
┗━━━━━━━━━┛
┏━━━━━━━━━┓
┃    ·    ┃
┃   · ·   ┃
┃  · · ·  ┃
┃ · · · · ┃
┃● ● · · ·┃
┗━━━━━━━━━┛
┏━━━━━━━━━┓
┃    ·    ┃
┃   · ·   ┃
┃  · · ·  ┃
┃ · · · · ┃
┃· · ● · ·┃
┗━━━━━━━━━┛
-------------------   Sort_disjoint_sublist.el  ---------------
[ 7 0 5 4 3 2 1 6 ]
-------------------   Sort_three_variables.el  ---------------
-12 0 77444
(from the "Wizard of OZ")
bears, oh my!
lions, tigers, and
-------------------   Sorting_algorithms+Bubble_sort.el  ---------------
[ 1 1 5 7 12 14 19 25 ]
-------------------   Sorting_algorithms+Counting_sort.el  ---------------
[ 5 5 11 12 21 22 35 36 47 68 77 107 110 115 137 140 148 154 157 217 221 234 247 263 292 294 296 307 325 335 342 381 394 416 419 420 421 422 433 440 468 485 485 532 534 534 536 546 550 563 566 574 601 619 625 638 641 642 643 647 649 653 654 656 659 661 668 678 687 697 709 709 716 724 725 726 745 756 761 771 779 783 794 794 796 805 819 829 842 845 898 898 901 916 960 967 975 989 990 993 ]
-------------------   Sorting_algorithms+Gnome_sort.el  ---------------
[ 4 5 26 27 29 44 55 72 77 92 ]
-------------------   Sorting_algorithms+Heapsort.el  ---------------
[ 4 5 26 27 29 44 55 72 77 92 ]
-------------------   Sorting_algorithms+Insertion_sort.el  ---------------
[ 4 5 26 27 29 44 55 72 77 92 ]
-------------------   Sorting_algorithms+Merge_sort.el  ---------------
[ 4 5 26 27 29 44 55 72 77 92 ]
-------------------   Sorting_algorithms+Quicksort.el  ---------------
[ 4 5 26 27 29 44 55 72 77 92 ]
-------------------   Sorting_algorithms+Radix_sort.el  ---------------
[ 4 5 26 27 29 44 55 72 77 92 ]
-------------------   Sorting_algorithms+Selection_sort.el  ---------------
[ 4 5 26 27 29 44 55 72 77 92 ]
-------------------   Sorting_algorithms+Stooge_sort.el  ---------------
[ 5 5 11 12 21 22 35 36 47 68 77 107 110 115 137 140 148 154 157 217 221 234 247 263 292 294 296 307 325 335 342 381 394 416 419 420 421 422 433 440 468 485 485 532 534 534 536 546 550 563 566 574 601 619 625 638 641 642 643 647 649 653 654 656 659 661 668 678 687 697 709 709 716 724 725 726 745 756 761 771 779 783 794 794 796 805 819 829 842 845 898 898 901 916 960 967 975 989 990 993 ]
-------------------   Soundex.el  ---------------
S532
E251
S532
E251
-------------------   Split_a_character_string_based_on_change_of_character.el  ---------------
g, HHH, 5, YY, ++, ///, \
-------------------   Square_form_factorization.el  ---------------
2501 has factors 61 41
12851 has factors 71 181
13289 has factors 137 97
75301 has factors 293 257
120787 has factors 43 2809
967009 has factors 1609 601
997417 has factors 257 3881
7091569 has factors 2663 2663
13290059 has factors 3119 4261
42854447 has factors 9689 4423
223553581 has factors 11213 19937
2027651281 has factors 46061 44021
11111111111 has factors 21649 513239
100895598169 has factors 112303 898423
1002742628021 was not factored.
60012462237239 has factors 6862753 8744663
287129523414791 has factors 6059887 47381993
Number 9007199254740931 is too big
9007199254740931 was not factored.
-------------------   Statistics+Basic.el  ---------------
Size:     100
Mean:   0.5221
Stddev: 0.2938
    8 ================
    9 ==================
   14 ============================
    8 ================
    8 ================
    7 ==============
   13 ==========================
    9 ==================
   11 ======================
   13 ==========================

Size:    1000
Mean:   0.4957
Stddev: 0.2809
  102 ====================
   80 ================
  111 ======================
   95 ===================
  120 ========================
  106 =====================
  108 ======================
   99 ====================
   80 ================
   99 ====================

Size:   10000
Mean:   0.4936
Stddev: 0.2876
 1014 ====================
 1049 =====================
 1014 ====================
  994 ====================
 1003 ====================
 1013 ====================
  979 ====================
 1001 ====================
  993 ====================
  940 ===================

Size:   100000
Mean:   0.4995
Stddev: 0.2892
10152 ====================
 9939 ====================
10000 ====================
 9988 ====================
 9939 ====================
 9958 ====================
10100 ====================
10029 ====================
 9874 ====================
10021 ====================

-------------------   Steffensen's_method.el  ---------------
t0 = 0 : no answer
t0 = 0.1 : intersection at (0.881 1.119)
t0 = 0.2 : no answer
t0 = 0.3 : no answer
t0 = 0.4 : no answer
t0 = 0.5 : no answer
t0 = 0.6 : no answer
t0 = 0.7 : no answer
t0 = 0.8 : no answer
t0 = 0.9 : intersection at (-0.681 2.681)
t0 = 1.0 : no answer
-------------------   Stirling_numbers_of_the_first_kind.el  ---------------
Unsigned Stirling numbers of the first kind:
1
0 1 
0 1 1 
0 2 3 1 
0 6 11 6 1 
0 24 50 35 10 1 
0 120 274 225 85 15 1 
0 720 1764 1624 735 175 21 1 
0 5040 13068 13132 6769 1960 322 28 1 
0 40320 109584 118124 67284 22449 4536 546 36 1 
0 362880 1026576 1172700 723680 269325 63273 9450 870 45 1 
0 3628800 10628640 12753576 8409500 3416930 902055 157773 18150 1320 55 1 
0 39916800 120543840 150917976 105258076 45995730 13339535 2637558 357423 32670 1925 66 1 
-------------------   Stirling_numbers_of_the_second_kind.el  ---------------
Unsigned Stirling numbers of the second kind:
1
0 1 
0 1 1 
0 1 3 1 
0 1 7 6 1 
0 1 15 25 10 1 
0 1 31 90 65 15 1 
0 1 63 301 350 140 21 1 
0 1 127 966 1701 1050 266 28 1 
0 1 255 3025 7770 6951 2646 462 36 1 
0 1 511 9330 34105 42525 22827 5880 750 45 1 
0 1 1023 28501 145750 246730 179487 63987 11880 1155 55 1 
0 1 2047 86526 611501 1379400 1323652 627396 159027 22275 1705 66 1 
-------------------   String_append.el  ---------------
hello world
-------------------   String_case.el  ---------------
alphaBETA
ALPHABETA
alphabeta
-------------------   String_comparison.el  ---------------
equal
not equal
equal
lexically before
numerically after
-------------------   String_concatenation.el  ---------------
hello world
-------------------   String_length.el  ---------------
5
7
8
1
-------------------   String_matching.el  ---------------
1
1
1
-------------------   String_prepend.el  ---------------
EasyLang
-------------------   Strip_a_set_of_characters_from_a_string.el  ---------------
Sh ws  soul strppr. Sh took my hrt!
-------------------   Strip_block_comments.el  ---------------

 function subroutine() {
  a =  b + c ;
 }
 

 
  function something() {
  }
-------------------   Strip_comments_from_a_string.el  ---------------
Regular string.
With a hash.
With a hash.
With a semicolon.
No comment.
-------------------   Strip_control_codes_and_extended_characters_from_a_string.el  ---------------
Hell world
-------------------   Strip_whitespace_from_a_string+Top_and_tail.el  ---------------
Hello world.
    Hello world.
Hello world.
-------------------   Sub-unit_squares.el  ---------------
 1 36 3136 24336 5973136-------------------   Subleq.el  ---------------
Hello, world!
-------------------   Substring+Top_and_tail.el  ---------------
EasyLan
asyLang
asyLan
-------------------   Substring.el  ---------------
22:54
22:54:22
-------------------   Subtractive_generator.el  ---------------
467478574
512932792
539453717
20349702
615542081
378707948
933204586
824858649
506003769
380969305
-------------------   Successive_prime_differences.el  ---------------
fastfunc isprim - size 141
Differences of 2 
( 3 5 )
( 999959 999961 )
Number of occurrences: 8169

Differences of 1 
( 2 3 )
( 2 3 )
Number of occurrences: 1

Differences of 2 2 
( 3 5 7 )
( 3 5 7 )
Number of occurrences: 1

Differences of 2 4 
( 5 7 11 )
( 999431 999433 999437 )
Number of occurrences: 1393

Differences of 4 2 
( 7 11 13 )
( 997807 997811 997813 )
Number of occurrences: 1444

Differences of 6 4 2 
( 31 37 41 43 )
( 997141 997147 997151 997153 )
Number of occurrences: 306

-------------------   Sudoku.el  ---------------
5 3 9  8 2 4  7 6 1  
6 7 2  1 5 9  8 3 4  
1 8 4  7 6 3  9 5 2  

3 1 8  5 7 2  6 4 9  
4 2 5  9 8 6  1 7 3  
7 9 6  3 4 1  2 8 5  

8 4 1  2 3 7  5 9 6  
9 6 7  4 1 5  3 2 8  
2 5 3  6 9 8  4 1 7  

-------------------   Sum_and_product_of_an_array.el  ---------------
Sum: 84
Product: 2793000
-------------------   Sum_digits_of_an_integer.el  ---------------
1
10
29
29
-------------------   Sum_of_a_series.el  ---------------
1.64393457
-------------------   Sum_of_squares.el  ---------------
55
-------------------   Summarize_primes.el  ---------------
1: 2
2: 5
4: 17
6: 41
12: 197
14: 281
60: 7699
64: 8893
96: 22039
100: 24133
102: 25237
108: 28697
114: 32353
122: 37561
124: 38921
130: 43201
132: 44683
146: 55837
152: 61027
158: 66463
162: 70241
-------------------   Sylvester's_sequence.el  ---------------
2
3
7
43
1807
3263443
10650056950807
1.1342371e+26
1.2864939e+52
1.6550665e+104

1.00000000
-------------------   Symmetric_difference.el  ---------------
[ "Serena" "Jim" ]
-------------------   System_time.el  ---------------
2023-11-05 12:20:20
-------------------   Temperature_conversion.el  ---------------
-------------------   The_Name_Game.el  ---------------
-------------------   The_Twelve_Days_of_Christmas.el  ---------------
On the first day of Christmas,
My true love gave to me:
A partridge in a pear tree.

On the second day of Christmas,
My true love gave to me:
Two turtle doves and
A partridge in a pear tree.

On the third day of Christmas,
My true love gave to me:
Three french hens
Two turtle doves and
A partridge in a pear tree.

On the forth day of Christmas,
My true love gave to me:
Four calling birds
Three french hens
Two turtle doves and
A partridge in a pear tree.

On the fifth day of Christmas,
My true love gave to me:
Five golden rings
Four calling birds
Three french hens
Two turtle doves and
A partridge in a pear tree.

On the sixth day of Christmas,
My true love gave to me:
Six geese a-laying
Five golden rings
Four calling birds
Three french hens
Two turtle doves and
A partridge in a pear tree.

On the seventh day of Christmas,
My true love gave to me:
Seven swans a-swimming
Six geese a-laying
Five golden rings
Four calling birds
Three french hens
Two turtle doves and
A partridge in a pear tree.

On the eighth day of Christmas,
My true love gave to me:
Eight maids a-milking
Seven swans a-swimming
Six geese a-laying
Five golden rings
Four calling birds
Three french hens
Two turtle doves and
A partridge in a pear tree.

On the ninth day of Christmas,
My true love gave to me:
Nine ladies dancing
Eight maids a-milking
Seven swans a-swimming
Six geese a-laying
Five golden rings
Four calling birds
Three french hens
Two turtle doves and
A partridge in a pear tree.

On the tenth day of Christmas,
My true love gave to me:
Ten lords a-leaping
Nine ladies dancing
Eight maids a-milking
Seven swans a-swimming
Six geese a-laying
Five golden rings
Four calling birds
Three french hens
Two turtle doves and
A partridge in a pear tree.

On the eleventh day of Christmas,
My true love gave to me:
Eleven pipers piping
Ten lords a-leaping
Nine ladies dancing
Eight maids a-milking
Seven swans a-swimming
Six geese a-laying
Five golden rings
Four calling birds
Three french hens
Two turtle doves and
A partridge in a pear tree.

On the twelfth day of Christmas,
My true love gave to me:
Twelve drummers drumming
Eleven pipers piping
Ten lords a-leaping
Nine ladies dancing
Eight maids a-milking
Seven swans a-swimming
Six geese a-laying
Five golden rings
Four calling birds
Three french hens
Two turtle doves and
A partridge in a pear tree.

-------------------   Tic-tac-toe.el  ---------------
-------------------   Time_a_function.el  ---------------
fastfunc fub - size 99
5000000050000000
2.04
5000000050000000
2.21
-------------------   Tokenize_a_string.el  ---------------
[ "Hello" "How" "Are" "You" "Today" ]
-------------------   Total_circles_area.el  ---------------
10000000 samples ...
21.5704
-------------------   Totient_function.el  ---------------
  N Prim Phi
  1      1
  2 x    1
  3 x    2
  4      2
  5 x    4
  6      2
  7 x    6
  8      4
  9      6
 10      4
 11 x   10
 12      4
 13 x   12
 14      6
 15      8
 16      8
 17 x   16
 18      6
 19 x   18
 20      8
 21     12
 22     10
 23 x   22
 24      8
 25     20

100 -  25 primes
1000 - 168 primes
10000 - 1229 primes
100000 - 9592 primes
-------------------   Towers_of_Hanoi.el  ---------------
Move 1 to 2
Move 1 to 3
Move 2 to 3
Move 1 to 2
Move 3 to 1
Move 3 to 2
Move 1 to 2
Move 1 to 3
Move 2 to 3
Move 2 to 1
Move 3 to 1
Move 2 to 3
Move 1 to 2
Move 1 to 3
Move 2 to 3
Move 1 to 2
Move 3 to 1
Move 3 to 2
Move 1 to 2
Move 3 to 1
Move 2 to 3
Move 2 to 1
Move 3 to 1
Move 3 to 2
Move 1 to 2
Move 1 to 3
Move 2 to 3
Move 1 to 2
Move 3 to 1
Move 3 to 2
Move 1 to 2
-------------------   Tree_traversal.el  ---------------
preorder: 1 2 4 7 5 3 6 8 9
inorder: 7 4 2 5 1 8 6 9 3
postorder: 7 4 5 2 8 9 6 3 1
level-order: 1 2 3 4 5 6 7 8
-------------------   Twelve_statements.el  ---------------
[ 1 0 1 1 0 1 1 0 0 0 1 0 ]
-------------------   Twin_primes.el  ---------------
fastfunc isprim - size 203
twin prime pairs < 10 : 2
twin prime pairs < 100 : 8
twin prime pairs < 1000 : 35
twin prime pairs < 10000 : 205
twin prime pairs < 100000 : 1224
twin prime pairs < 1000000 : 8169
-------------------   Two_bullet_roulette.el  ---------------
load spin load spin fire spin fire -> 55.75% death
load spin load spin fire fire -> 58.40% death
load load spin fire spin fire -> 55.54% death
load load spin fire fire -> 49.91% death
-------------------   Two_sum.el  ---------------
[ 2 4 ]
-------------------   Ulam_spiral_(for_primes).el  ---------------
-------------------   User_input+Text.el  ---------------
-------------------   Van_Eck_sequence.el  ---------------
0 0 1 0 2 0 2 2 1 6 
4 7 30 25 67 225 488 0 10 136 -------------------   Van_der_Corput_sequence.el  ---------------
base 2: 0 0.50 0.25 0.75 0.12 0.62 0.38 0.88 0.06 0.56
base 3: 0 0.33 0.67 0.11 0.44 0.78 0.22 0.56 0.89 0.04
base 4: 0 0.25 0.50 0.75 0.06 0.31 0.56 0.81 0.12 0.38
base 5: 0 0.20 0.40 0.60 0.80 0.04 0.24 0.44 0.64 0.84
-------------------   Variables.el  ---------------
99
2.10
3.14
3
easylang.dev
[ "apple" "banana" "orange" ]
-------------------   Vibrating_rectangles.el  ---------------
-------------------   Vigenère_cipher.el  ---------------
WMCEEIKLGRPIFVMEUGXQPWQVIOIAVEYXUEKFKBTALVXTGAFXYEVKPAGY
BEWARETHEJABBERWOCKMYSONTHEJAWSTHATBITETHECLAWSTHATCATCH
-------------------   Wagstaff_primes.el  ---------------
3 => 3
5 => 11
7 => 43
11 => 683
13 => 2731
17 => 43691
19 => 174763
23 => 2796203
31 => 715827883
43 => 2932031007403
-------------------   Water_collected_between_towers.el  ---------------
2
14
35
0
0
0
0
-------------------   Wilson_primes_of_order_n.el  ---------------
n:  Wilson primes
-----------------
1   5 13 563 
2   3 11 107 4931 
3   7 
4   
5   5 7 47 
6   11 
7   17 
8   
9   541 
10   11 1109 
11   17 2713 
-------------------   Word_wrap.el  ---------------
In olden times when wishing still helped
one, there lived a king whose daughters
were all beautiful, but the youngest was
so beautiful that the sun itself, which
has seen so much, was astonished
whenever it shone in her face. Close by
the king's castle lay a great dark
forest, and under an old lime-tree in
the forest was a well, and when the day
was very warm, the king's child went out
into the forest and sat down by the side
of the cool fountain, and when she was
bored she took a golden ball, and threw
it up on high and caught it, and this
ball was her favorite plaything.’
-------------------   Zeckendorf_number_representation.el  ---------------
 0 0
 1 1
 2 10
 3 100
 4 101
 5 1000
 6 1001
 7 1010
 8 10000
 9 10001
 10 10010
 11 10100
 12 10101
 13 100000
 14 100001
 15 100010
 16 100100
 17 100101
 18 101000
 19 101001
 20 101010
-------------------   Zero_to_the_zero_power.el  ---------------
1
-------------------   Zsigmondy_numbers.el  ---------------
Zsigmondy(n, 2, 1): 1 3 7 5 31 1 127 17 73 11
Zsigmondy(n, 3, 1): 2 1 13 5 121 7 1093 41 757 61
Zsigmondy(n, 4, 1): 3 5 7 17 341 13 5461 257 1387 41
Zsigmondy(n, 5, 1): 4 3 31 13 781 7 19531 313 15751 521
Zsigmondy(n, 6, 1): 5 7 43 37 311 31 55987 1297 46873 1111
Zsigmondy(n, 7, 1): 6 1 19 25 2801 43 137257 1201 39331 2101
Zsigmondy(n, 3, 2): 1 5 19 13 211 7 2059 97 1009 11
Zsigmondy(n, 5, 3): 2 1 49 17 1441 19 37969 353 19729 421
Zsigmondy(n, 7, 3): 4 5 79 29 4141 37 205339 1241 127639 341
Zsigmondy(n, 7, 5): 2 3 109 37 6841 13 372709 1513 176149 1661
